(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[34],{1180:e=>{e.exports={container:"editor_container__vbjKJ",display:"editor_display__Y6O_k",editor:"editor_editor__fzkUg",toolbar:"editor_toolbar__djani",textarea:"editor_textarea__rXZNA",info:"editor_info__4ZL51",warning:"editor_warning__3qIoD",danger:"editor_danger__gSyUL",documentation:"editor_documentation__Cu5uY",ul:"editor_ul__0ahSx",li:"editor_li__aRdo3",img:"editor_img__eBTZR"}},1495:(e,r,a)=>{"use strict";a.d(r,{default:()=>P});var n=a(5155),o=a(1180),t=a.n(o),l=a(2115),c=a(1865);let i=(0,c.xw)(["grammar",{source:'Program {\n  command\n    = (space* pixelToCommand)*\n\n  pixelToCommand\n    = absolutePixelToCommand\n    | relativePixelToCommand\n\n  absolutePixelToCommand\n    = absolutePixelToToken space* coordinatePairSequence\n  absolutePixelToToken = "P"\n  relativePixelToCommand\n    = relativePixelToToken space* coordinatePairSequence\n  relativePixelToToken = "p"\n\n  coordinatePairSequence\n    = coordinatePair coordinateSeparator? coordinatePairSequence -- recursive\n    | coordinatePair -- single\n\n  coordinatePair = coordinate coordinateSeparator coordinate\n\n  coordinate = integer+\n\n  coordinateSeparator\n    = space+ ","? space* -- space\n    | "," space* -- comma\n\n  integer\n    = digit+\n}'},"Program",null,"command",{command:["define",{sourceInterval:[12,50]},null,[],["star",{sourceInterval:[26,50]},["seq",{sourceInterval:[27,48]},["star",{sourceInterval:[27,33]},["app",{sourceInterval:[27,32]},"space",[]]],["app",{sourceInterval:[34,48]},"pixelToCommand",[]]]]],pixelToCommand:["define",{sourceInterval:[54,126]},null,[],["alt",{sourceInterval:[75,126]},["app",{sourceInterval:[75,97]},"absolutePixelToCommand",[]],["app",{sourceInterval:[104,126]},"relativePixelToCommand",[]]]],absolutePixelToCommand:["define",{sourceInterval:[130,209]},null,[],["seq",{sourceInterval:[159,209]},["app",{sourceInterval:[159,179]},"absolutePixelToToken",[]],["star",{sourceInterval:[180,186]},["app",{sourceInterval:[180,185]},"space",[]]],["app",{sourceInterval:[187,209]},"coordinatePairSequence",[]]]],absolutePixelToToken:["define",{sourceInterval:[212,238]},null,[],["terminal",{sourceInterval:[235,238]},"P"]],relativePixelToCommand:["define",{sourceInterval:[241,320]},null,[],["seq",{sourceInterval:[270,320]},["app",{sourceInterval:[270,290]},"relativePixelToToken",[]],["star",{sourceInterval:[291,297]},["app",{sourceInterval:[291,296]},"space",[]]],["app",{sourceInterval:[298,320]},"coordinatePairSequence",[]]]],relativePixelToToken:["define",{sourceInterval:[323,349]},null,[],["terminal",{sourceInterval:[346,349]},"p"]],coordinatePairSequence_recursive:["define",{sourceInterval:[382,453]},null,[],["seq",{sourceInterval:[382,440]},["app",{sourceInterval:[382,396]},"coordinatePair",[]],["opt",{sourceInterval:[397,417]},["app",{sourceInterval:[397,416]},"coordinateSeparator",[]]],["app",{sourceInterval:[418,440]},"coordinatePairSequence",[]]]],coordinatePairSequence_single:["define",{sourceInterval:[460,484]},null,[],["app",{sourceInterval:[460,474]},"coordinatePair",[]]],coordinatePairSequence:["define",{sourceInterval:[353,484]},null,[],["alt",{sourceInterval:[382,484]},["app",{sourceInterval:[382,440]},"coordinatePairSequence_recursive",[]],["app",{sourceInterval:[460,474]},"coordinatePairSequence_single",[]]]],coordinatePair:["define",{sourceInterval:[488,546]},null,[],["seq",{sourceInterval:[505,546]},["app",{sourceInterval:[505,515]},"coordinate",[]],["app",{sourceInterval:[516,535]},"coordinateSeparator",[]],["app",{sourceInterval:[536,546]},"coordinate",[]]]],coordinate:["define",{sourceInterval:[550,571]},null,[],["plus",{sourceInterval:[563,571]},["app",{sourceInterval:[563,570]},"integer",[]]]],coordinateSeparator_space:["define",{sourceInterval:[601,628]},null,[],["seq",{sourceInterval:[601,619]},["plus",{sourceInterval:[601,607]},["app",{sourceInterval:[601,606]},"space",[]]],["opt",{sourceInterval:[608,612]},["terminal",{sourceInterval:[608,611]},","]],["star",{sourceInterval:[613,619]},["app",{sourceInterval:[613,618]},"space",[]]]]],coordinateSeparator_comma:["define",{sourceInterval:[635,654]},null,[],["seq",{sourceInterval:[635,645]},["terminal",{sourceInterval:[635,638]},","],["star",{sourceInterval:[639,645]},["app",{sourceInterval:[639,644]},"space",[]]]]],coordinateSeparator:["define",{sourceInterval:[575,654]},null,[],["alt",{sourceInterval:[601,654]},["app",{sourceInterval:[601,619]},"coordinateSeparator_space",[]],["app",{sourceInterval:[635,645]},"coordinateSeparator_comma",[]]]],integer:["define",{sourceInterval:[658,678]},null,[],["plus",{sourceInterval:[672,678]},["app",{sourceInterval:[672,677]},"digit",[]]]]}]),u=i.createSemantics();u.addOperation("eval()",{integer(e){return parseInt(this.sourceString,10)},coordinate(e){return parseInt(this.sourceString,10)}}),u.addOperation("coordinates()",{coordinatePair:(e,r,a)=>({x:e.eval(),y:a.eval()})}),u.addOperation("pairSequence()",{coordinatePairSequence_recursive:(e,r,a)=>[e.coordinates(),...a.pairSequence()],coordinatePairSequence_single:e=>[e.coordinates()],coordinatePairSequence:e=>e.pairSequence()}),u.addOperation("tokenize()",{absolutePixelToToken(e){return this.sourceString},relativePixelToToken(e){return this.sourceString}}),u.addOperation("command()",{pixelToCommand:e=>e.command(),absolutePixelToCommand:(e,r,a)=>({type:e.tokenize(),sequences:a.pairSequence()}),relativePixelToCommand:(e,r,a)=>({type:e.tokenize(),sequences:a.pairSequence()})}),u.addOperation("run()",{command:(e,r)=>r.children.map(e=>e.command())});let s=(0,c.xw)(["grammar",{source:'Program {\n  command\n    = space* (moveToCommand (space* drawToCommand)*)? space*\n\n  drawToCommand\n    = moveToCommand\n    | absoluteVerticalLineToCommand\n    | relativeVerticalLineToCommand\n    | absoluteHorizontalLineToCommand\n    | relativeHorizontalLineToCommand\n\n  absoluteVerticalLineToCommand\n    = absoluteVerticalLineToToken space* coordinateSequence\n  absoluteVerticalLineToToken = "V"\n  relativeVerticalLineToCommand\n    = relativeVerticalLineToToken space* coordinateSequence\n  relativeVerticalLineToToken = "v"\n\n  absoluteHorizontalLineToCommand\n    = absoluteHorizontalLineToToken space* coordinateSequence\n  absoluteHorizontalLineToToken = "H"\n  relativeHorizontalLineToCommand\n    = relativeHorizontalLineToToken space* coordinateSequence\n  relativeHorizontalLineToToken = "h"\n\n  moveToCommand = moveToToken space* coordinatePairSequence\n  moveToToken = "M" | "m"\n\n  coordinatePairSequence\n    = coordinatePair coordinateSeparator? coordinatePairSequence -- recursive\n    | coordinatePair -- single\n\n  coordinateSequence\n    = coordinate coordinateSeparator? coordinateSequence -- recursive\n    | coordinate --single\n\n  coordinatePair = coordinate coordinateSeparator coordinate\n\n  coordinate = digit+\n\n  coordinateSeparator\n    = space+ ","? space* -- space\n    | "," space* -- comma\n}'},"Program",null,"command",{command:["define",{sourceInterval:[12,80]},null,[],["seq",{sourceInterval:[26,80]},["star",{sourceInterval:[26,32]},["app",{sourceInterval:[26,31]},"space",[]]],["opt",{sourceInterval:[33,73]},["seq",{sourceInterval:[34,71]},["app",{sourceInterval:[34,47]},"moveToCommand",[]],["star",{sourceInterval:[48,71]},["seq",{sourceInterval:[49,69]},["star",{sourceInterval:[49,55]},["app",{sourceInterval:[49,54]},"space",[]]],["app",{sourceInterval:[56,69]},"drawToCommand",[]]]]]],["star",{sourceInterval:[74,80]},["app",{sourceInterval:[74,79]},"space",[]]]]],drawToCommand:["define",{sourceInterval:[84,265]},null,[],["alt",{sourceInterval:[104,265]},["app",{sourceInterval:[104,117]},"moveToCommand",[]],["app",{sourceInterval:[124,153]},"absoluteVerticalLineToCommand",[]],["app",{sourceInterval:[160,189]},"relativeVerticalLineToCommand",[]],["app",{sourceInterval:[196,227]},"absoluteHorizontalLineToCommand",[]],["app",{sourceInterval:[234,265]},"relativeHorizontalLineToCommand",[]]]],absoluteVerticalLineToCommand:["define",{sourceInterval:[269,358]},null,[],["seq",{sourceInterval:[305,358]},["app",{sourceInterval:[305,332]},"absoluteVerticalLineToToken",[]],["star",{sourceInterval:[333,339]},["app",{sourceInterval:[333,338]},"space",[]]],["app",{sourceInterval:[340,358]},"coordinateSequence",[]]]],absoluteVerticalLineToToken:["define",{sourceInterval:[361,394]},null,[],["terminal",{sourceInterval:[391,394]},"V"]],relativeVerticalLineToCommand:["define",{sourceInterval:[397,486]},null,[],["seq",{sourceInterval:[433,486]},["app",{sourceInterval:[433,460]},"relativeVerticalLineToToken",[]],["star",{sourceInterval:[461,467]},["app",{sourceInterval:[461,466]},"space",[]]],["app",{sourceInterval:[468,486]},"coordinateSequence",[]]]],relativeVerticalLineToToken:["define",{sourceInterval:[489,522]},null,[],["terminal",{sourceInterval:[519,522]},"v"]],absoluteHorizontalLineToCommand:["define",{sourceInterval:[526,619]},null,[],["seq",{sourceInterval:[564,619]},["app",{sourceInterval:[564,593]},"absoluteHorizontalLineToToken",[]],["star",{sourceInterval:[594,600]},["app",{sourceInterval:[594,599]},"space",[]]],["app",{sourceInterval:[601,619]},"coordinateSequence",[]]]],absoluteHorizontalLineToToken:["define",{sourceInterval:[622,657]},null,[],["terminal",{sourceInterval:[654,657]},"H"]],relativeHorizontalLineToCommand:["define",{sourceInterval:[660,753]},null,[],["seq",{sourceInterval:[698,753]},["app",{sourceInterval:[698,727]},"relativeHorizontalLineToToken",[]],["star",{sourceInterval:[728,734]},["app",{sourceInterval:[728,733]},"space",[]]],["app",{sourceInterval:[735,753]},"coordinateSequence",[]]]],relativeHorizontalLineToToken:["define",{sourceInterval:[756,791]},null,[],["terminal",{sourceInterval:[788,791]},"h"]],moveToCommand:["define",{sourceInterval:[795,852]},null,[],["seq",{sourceInterval:[811,852]},["app",{sourceInterval:[811,822]},"moveToToken",[]],["star",{sourceInterval:[823,829]},["app",{sourceInterval:[823,828]},"space",[]]],["app",{sourceInterval:[830,852]},"coordinatePairSequence",[]]]],moveToToken:["define",{sourceInterval:[855,878]},null,[],["alt",{sourceInterval:[869,878]},["terminal",{sourceInterval:[869,872]},"M"],["terminal",{sourceInterval:[875,878]},"m"]]],coordinatePairSequence_recursive:["define",{sourceInterval:[911,982]},null,[],["seq",{sourceInterval:[911,969]},["app",{sourceInterval:[911,925]},"coordinatePair",[]],["opt",{sourceInterval:[926,946]},["app",{sourceInterval:[926,945]},"coordinateSeparator",[]]],["app",{sourceInterval:[947,969]},"coordinatePairSequence",[]]]],coordinatePairSequence_single:["define",{sourceInterval:[989,1013]},null,[],["app",{sourceInterval:[989,1003]},"coordinatePair",[]]],coordinatePairSequence:["define",{sourceInterval:[882,1013]},null,[],["alt",{sourceInterval:[911,1013]},["app",{sourceInterval:[911,969]},"coordinatePairSequence_recursive",[]],["app",{sourceInterval:[989,1003]},"coordinatePairSequence_single",[]]]],coordinateSequence_recursive:["define",{sourceInterval:[1042,1105]},null,[],["seq",{sourceInterval:[1042,1092]},["app",{sourceInterval:[1042,1052]},"coordinate",[]],["opt",{sourceInterval:[1053,1073]},["app",{sourceInterval:[1053,1072]},"coordinateSeparator",[]]],["app",{sourceInterval:[1074,1092]},"coordinateSequence",[]]]],coordinateSequence_single:["define",{sourceInterval:[1112,1131]},null,[],["app",{sourceInterval:[1112,1122]},"coordinate",[]]],coordinateSequence:["define",{sourceInterval:[1017,1131]},null,[],["alt",{sourceInterval:[1042,1131]},["app",{sourceInterval:[1042,1092]},"coordinateSequence_recursive",[]],["app",{sourceInterval:[1112,1122]},"coordinateSequence_single",[]]]],coordinatePair:["define",{sourceInterval:[1135,1193]},null,[],["seq",{sourceInterval:[1152,1193]},["app",{sourceInterval:[1152,1162]},"coordinate",[]],["app",{sourceInterval:[1163,1182]},"coordinateSeparator",[]],["app",{sourceInterval:[1183,1193]},"coordinate",[]]]],coordinate:["define",{sourceInterval:[1197,1216]},null,[],["plus",{sourceInterval:[1210,1216]},["app",{sourceInterval:[1210,1215]},"digit",[]]]],coordinateSeparator_space:["define",{sourceInterval:[1246,1273]},null,[],["seq",{sourceInterval:[1246,1264]},["plus",{sourceInterval:[1246,1252]},["app",{sourceInterval:[1246,1251]},"space",[]]],["opt",{sourceInterval:[1253,1257]},["terminal",{sourceInterval:[1253,1256]},","]],["star",{sourceInterval:[1258,1264]},["app",{sourceInterval:[1258,1263]},"space",[]]]]],coordinateSeparator_comma:["define",{sourceInterval:[1280,1299]},null,[],["seq",{sourceInterval:[1280,1290]},["terminal",{sourceInterval:[1280,1283]},","],["star",{sourceInterval:[1284,1290]},["app",{sourceInterval:[1284,1289]},"space",[]]]]],coordinateSeparator:["define",{sourceInterval:[1220,1299]},null,[],["alt",{sourceInterval:[1246,1299]},["app",{sourceInterval:[1246,1264]},"coordinateSeparator_space",[]],["app",{sourceInterval:[1280,1290]},"coordinateSeparator_comma",[]]]]}]),p=s.createSemantics();p.addOperation("eval()",{coordinate(e){return parseInt(this.sourceString,10)}}),p.addOperation("coordinates()",{coordinatePair:(e,r,a)=>({x:e.eval(),y:a.eval()})}),p.addOperation("pairSequence()",{coordinatePairSequence_recursive:(e,r,a)=>[e.coordinates(),...a.pairSequence()],coordinatePairSequence_single:e=>[e.coordinates()],coordinatePairSequence:e=>e.pairSequence()}),p.addOperation("sequence()",{coordinateSequence_recursive:(e,r,a)=>[e.eval(),...a.sequence()],coordinateSequence_single:e=>[e.eval()],coordinateSequence:e=>e.sequence()}),p.addOperation("tokenize()",{moveToToken(e){return this.sourceString},relativeHorizontalLineToToken(e){return this.sourceString},absoluteHorizontalLineToToken(e){return this.sourceString},relativeVerticalLineToToken(e){return this.sourceString},absoluteVerticalLineToToken(e){return this.sourceString}}),p.addOperation("command()",{drawToCommand:e=>e.command(),moveToCommand:(e,r,a)=>({type:e.tokenize(),sequences:a.pairSequence()}),absoluteVerticalLineToCommand:(e,r,a)=>({type:e.tokenize(),sequences:a.sequence().map(e=>({x:0,y:e}))}),relativeVerticalLineToCommand:(e,r,a)=>({type:e.tokenize(),sequences:a.sequence().map(e=>({x:0,y:e}))}),absoluteHorizontalLineToCommand:(e,r,a)=>({type:e.tokenize(),sequences:a.sequence().map(e=>({x:e,y:0}))}),relativeHorizontalLineToCommand:(e,r,a)=>({type:e.tokenize(),sequences:a.sequence().map(e=>({x:e,y:0}))})}),p.addOperation("run()",{command:(e,r,a,n,o)=>[...r.children.map(e=>e.command()),...n.children.map(e=>e.children.map(e=>e.command())).flat()]});let v=(0,c.xw)(["grammar",{source:'Program {\n  command\n    = space* (moveToCommand (space* drawToCommand)*)? space*\n\n  drawToCommand\n    = moveToCommand\n    | absoluteVerticalLineToCommand\n    | relativeVerticalLineToCommand\n    | absoluteHorizontalLineToCommand\n    | relativeHorizontalLineToCommand\n\n  absoluteVerticalLineToCommand\n    = absoluteVerticalLineToToken space* coordinateSequence\n  absoluteVerticalLineToToken = "V"\n  relativeVerticalLineToCommand\n    = relativeVerticalLineToToken space* coordinateSequence\n  relativeVerticalLineToToken = "v"\n\n  absoluteHorizontalLineToCommand\n    = absoluteHorizontalLineToToken space* coordinateSequence\n  absoluteHorizontalLineToToken = "H"\n  relativeHorizontalLineToCommand\n    = relativeHorizontalLineToToken space* coordinateSequence\n  relativeHorizontalLineToToken = "h"\n\n  moveToCommand = moveToToken space* coordinatePairSequence\n  moveToToken = "M" | "m"\n\n  coordinatePairSequence\n    = coordinatePair coordinateSeparator? coordinatePairSequence -- recursive\n    | coordinatePair -- single\n\n  coordinateSequence\n    = coordinate coordinateSeparator? coordinateSequence -- recursive\n    | coordinate --single\n\n  coordinatePair = coordinate coordinateSeparator coordinate\n\n  coordinate = sign? integer\n\n  coordinateSeparator\n    = space+ ","? space* -- space\n    | "," space* -- comma\n\n  sign = "-" | "+"\n\n  integer\n    = digit+\n}'},"Program",null,"command",{command:["define",{sourceInterval:[12,80]},null,[],["seq",{sourceInterval:[26,80]},["star",{sourceInterval:[26,32]},["app",{sourceInterval:[26,31]},"space",[]]],["opt",{sourceInterval:[33,73]},["seq",{sourceInterval:[34,71]},["app",{sourceInterval:[34,47]},"moveToCommand",[]],["star",{sourceInterval:[48,71]},["seq",{sourceInterval:[49,69]},["star",{sourceInterval:[49,55]},["app",{sourceInterval:[49,54]},"space",[]]],["app",{sourceInterval:[56,69]},"drawToCommand",[]]]]]],["star",{sourceInterval:[74,80]},["app",{sourceInterval:[74,79]},"space",[]]]]],drawToCommand:["define",{sourceInterval:[84,265]},null,[],["alt",{sourceInterval:[104,265]},["app",{sourceInterval:[104,117]},"moveToCommand",[]],["app",{sourceInterval:[124,153]},"absoluteVerticalLineToCommand",[]],["app",{sourceInterval:[160,189]},"relativeVerticalLineToCommand",[]],["app",{sourceInterval:[196,227]},"absoluteHorizontalLineToCommand",[]],["app",{sourceInterval:[234,265]},"relativeHorizontalLineToCommand",[]]]],absoluteVerticalLineToCommand:["define",{sourceInterval:[269,358]},null,[],["seq",{sourceInterval:[305,358]},["app",{sourceInterval:[305,332]},"absoluteVerticalLineToToken",[]],["star",{sourceInterval:[333,339]},["app",{sourceInterval:[333,338]},"space",[]]],["app",{sourceInterval:[340,358]},"coordinateSequence",[]]]],absoluteVerticalLineToToken:["define",{sourceInterval:[361,394]},null,[],["terminal",{sourceInterval:[391,394]},"V"]],relativeVerticalLineToCommand:["define",{sourceInterval:[397,486]},null,[],["seq",{sourceInterval:[433,486]},["app",{sourceInterval:[433,460]},"relativeVerticalLineToToken",[]],["star",{sourceInterval:[461,467]},["app",{sourceInterval:[461,466]},"space",[]]],["app",{sourceInterval:[468,486]},"coordinateSequence",[]]]],relativeVerticalLineToToken:["define",{sourceInterval:[489,522]},null,[],["terminal",{sourceInterval:[519,522]},"v"]],absoluteHorizontalLineToCommand:["define",{sourceInterval:[526,619]},null,[],["seq",{sourceInterval:[564,619]},["app",{sourceInterval:[564,593]},"absoluteHorizontalLineToToken",[]],["star",{sourceInterval:[594,600]},["app",{sourceInterval:[594,599]},"space",[]]],["app",{sourceInterval:[601,619]},"coordinateSequence",[]]]],absoluteHorizontalLineToToken:["define",{sourceInterval:[622,657]},null,[],["terminal",{sourceInterval:[654,657]},"H"]],relativeHorizontalLineToCommand:["define",{sourceInterval:[660,753]},null,[],["seq",{sourceInterval:[698,753]},["app",{sourceInterval:[698,727]},"relativeHorizontalLineToToken",[]],["star",{sourceInterval:[728,734]},["app",{sourceInterval:[728,733]},"space",[]]],["app",{sourceInterval:[735,753]},"coordinateSequence",[]]]],relativeHorizontalLineToToken:["define",{sourceInterval:[756,791]},null,[],["terminal",{sourceInterval:[788,791]},"h"]],moveToCommand:["define",{sourceInterval:[795,852]},null,[],["seq",{sourceInterval:[811,852]},["app",{sourceInterval:[811,822]},"moveToToken",[]],["star",{sourceInterval:[823,829]},["app",{sourceInterval:[823,828]},"space",[]]],["app",{sourceInterval:[830,852]},"coordinatePairSequence",[]]]],moveToToken:["define",{sourceInterval:[855,878]},null,[],["alt",{sourceInterval:[869,878]},["terminal",{sourceInterval:[869,872]},"M"],["terminal",{sourceInterval:[875,878]},"m"]]],coordinatePairSequence_recursive:["define",{sourceInterval:[911,982]},null,[],["seq",{sourceInterval:[911,969]},["app",{sourceInterval:[911,925]},"coordinatePair",[]],["opt",{sourceInterval:[926,946]},["app",{sourceInterval:[926,945]},"coordinateSeparator",[]]],["app",{sourceInterval:[947,969]},"coordinatePairSequence",[]]]],coordinatePairSequence_single:["define",{sourceInterval:[989,1013]},null,[],["app",{sourceInterval:[989,1003]},"coordinatePair",[]]],coordinatePairSequence:["define",{sourceInterval:[882,1013]},null,[],["alt",{sourceInterval:[911,1013]},["app",{sourceInterval:[911,969]},"coordinatePairSequence_recursive",[]],["app",{sourceInterval:[989,1003]},"coordinatePairSequence_single",[]]]],coordinateSequence_recursive:["define",{sourceInterval:[1042,1105]},null,[],["seq",{sourceInterval:[1042,1092]},["app",{sourceInterval:[1042,1052]},"coordinate",[]],["opt",{sourceInterval:[1053,1073]},["app",{sourceInterval:[1053,1072]},"coordinateSeparator",[]]],["app",{sourceInterval:[1074,1092]},"coordinateSequence",[]]]],coordinateSequence_single:["define",{sourceInterval:[1112,1131]},null,[],["app",{sourceInterval:[1112,1122]},"coordinate",[]]],coordinateSequence:["define",{sourceInterval:[1017,1131]},null,[],["alt",{sourceInterval:[1042,1131]},["app",{sourceInterval:[1042,1092]},"coordinateSequence_recursive",[]],["app",{sourceInterval:[1112,1122]},"coordinateSequence_single",[]]]],coordinatePair:["define",{sourceInterval:[1135,1193]},null,[],["seq",{sourceInterval:[1152,1193]},["app",{sourceInterval:[1152,1162]},"coordinate",[]],["app",{sourceInterval:[1163,1182]},"coordinateSeparator",[]],["app",{sourceInterval:[1183,1193]},"coordinate",[]]]],coordinate:["define",{sourceInterval:[1197,1223]},null,[],["seq",{sourceInterval:[1210,1223]},["opt",{sourceInterval:[1210,1215]},["app",{sourceInterval:[1210,1214]},"sign",[]]],["app",{sourceInterval:[1216,1223]},"integer",[]]]],coordinateSeparator_space:["define",{sourceInterval:[1253,1280]},null,[],["seq",{sourceInterval:[1253,1271]},["plus",{sourceInterval:[1253,1259]},["app",{sourceInterval:[1253,1258]},"space",[]]],["opt",{sourceInterval:[1260,1264]},["terminal",{sourceInterval:[1260,1263]},","]],["star",{sourceInterval:[1265,1271]},["app",{sourceInterval:[1265,1270]},"space",[]]]]],coordinateSeparator_comma:["define",{sourceInterval:[1287,1306]},null,[],["seq",{sourceInterval:[1287,1297]},["terminal",{sourceInterval:[1287,1290]},","],["star",{sourceInterval:[1291,1297]},["app",{sourceInterval:[1291,1296]},"space",[]]]]],coordinateSeparator:["define",{sourceInterval:[1227,1306]},null,[],["alt",{sourceInterval:[1253,1306]},["app",{sourceInterval:[1253,1271]},"coordinateSeparator_space",[]],["app",{sourceInterval:[1287,1297]},"coordinateSeparator_comma",[]]]],sign:["define",{sourceInterval:[1310,1326]},null,[],["alt",{sourceInterval:[1317,1326]},["terminal",{sourceInterval:[1317,1320]},"-"],["terminal",{sourceInterval:[1323,1326]},"+"]]],integer:["define",{sourceInterval:[1330,1350]},null,[],["plus",{sourceInterval:[1344,1350]},["app",{sourceInterval:[1344,1349]},"digit",[]]]]}]),d=v.createSemantics();d.addOperation("eval()",{coordinate(e,r){return parseInt(this.sourceString,10)}}),d.addOperation("coordinates()",{coordinatePair:(e,r,a)=>({x:e.eval(),y:a.eval()})}),d.addOperation("pairSequence()",{coordinatePairSequence_recursive:(e,r,a)=>[e.coordinates(),...a.pairSequence()],coordinatePairSequence_single:e=>[e.coordinates()],coordinatePairSequence:e=>e.pairSequence()}),d.addOperation("sequence()",{coordinateSequence_recursive:(e,r,a)=>[e.eval(),...a.sequence()],coordinateSequence_single:e=>[e.eval()],coordinateSequence:e=>e.sequence()}),d.addOperation("tokenize()",{moveToToken(e){return this.sourceString},relativeHorizontalLineToToken(e){return this.sourceString},absoluteHorizontalLineToToken(e){return this.sourceString},relativeVerticalLineToToken(e){return this.sourceString},absoluteVerticalLineToToken(e){return this.sourceString}}),d.addOperation("command()",{drawToCommand:e=>e.command(),moveToCommand:(e,r,a)=>({type:e.tokenize(),sequences:a.pairSequence()}),absoluteVerticalLineToCommand:(e,r,a)=>({type:e.tokenize(),sequences:a.sequence().map(e=>({x:0,y:e}))}),relativeVerticalLineToCommand:(e,r,a)=>({type:e.tokenize(),sequences:a.sequence().map(e=>({x:0,y:e}))}),absoluteHorizontalLineToCommand:(e,r,a)=>({type:e.tokenize(),sequences:a.sequence().map(e=>({x:e,y:0}))}),relativeHorizontalLineToCommand:(e,r,a)=>({type:e.tokenize(),sequences:a.sequence().map(e=>({x:e,y:0}))})}),d.addOperation("run()",{command:(e,r,a,n,o)=>[...r.children.map(e=>e.command()),...n.children.map(e=>e.children.map(e=>e.command())).flat()]});let m=(0,c.xw)(["grammar",{source:'Program {\n  command\n    = space* (moveToCommand (space* drawToCommand)*)? space*\n\n  drawToCommand\n    = moveToCommand\n    | absoluteLineToCommand\n    | relativeLineToCommand\n    | absoluteVerticalLineToCommand\n    | relativeVerticalLineToCommand\n    | absoluteHorizontalLineToCommand\n    | relativeHorizontalLineToCommand\n    | absoluteClosePathToken\n    | relativeClosePathToken\n      \n  absoluteClosePathToken = "Z"\n  relativeClosePathToken = "z"\n\n  absoluteLineToCommand\n    = absoluteLineToToken space* coordinatePairSequence\n  absoluteLineToToken = "L"\n  relativeLineToCommand\n    = relativeLineToToken space* coordinatePairSequence\n  relativeLineToToken = "l"\n\n  absoluteVerticalLineToCommand\n    = absoluteVerticalLineToToken space* coordinateSequence\n  absoluteVerticalLineToToken = "V"\n  relativeVerticalLineToCommand\n    = relativeVerticalLineToToken space* coordinateSequence\n  relativeVerticalLineToToken = "v"\n\n  absoluteHorizontalLineToCommand\n    = absoluteHorizontalLineToToken space* coordinateSequence\n  absoluteHorizontalLineToToken = "H"\n  relativeHorizontalLineToCommand\n    = relativeHorizontalLineToToken space* coordinateSequence\n  relativeHorizontalLineToToken = "h"\n\n  moveToCommand = moveToToken space* coordinatePairSequence\n  moveToToken = "M" | "m"\n\n  coordinatePairSequence\n    = coordinatePair coordinateSeparator? coordinatePairSequence -- recursive\n    | coordinatePair -- single\n\n  coordinateSequence\n    = coordinate coordinateSeparator? coordinateSequence -- recursive\n    | coordinate --single\n\n  coordinatePair = coordinate coordinateSeparator coordinate\n\n  coordinate = sign? integer\n\n  coordinateSeparator\n    = space+ ","? space* -- space\n    | "," space* -- comma\n\n  sign = "-" | "+"\n\n  integer\n    = digit+\n}'},"Program",null,"command",{command:["define",{sourceInterval:[12,80]},null,[],["seq",{sourceInterval:[26,80]},["star",{sourceInterval:[26,32]},["app",{sourceInterval:[26,31]},"space",[]]],["opt",{sourceInterval:[33,73]},["seq",{sourceInterval:[34,71]},["app",{sourceInterval:[34,47]},"moveToCommand",[]],["star",{sourceInterval:[48,71]},["seq",{sourceInterval:[49,69]},["star",{sourceInterval:[49,55]},["app",{sourceInterval:[49,54]},"space",[]]],["app",{sourceInterval:[56,69]},"drawToCommand",[]]]]]],["star",{sourceInterval:[74,80]},["app",{sourceInterval:[74,79]},"space",[]]]]],drawToCommand:["define",{sourceInterval:[84,379]},null,[],["alt",{sourceInterval:[104,379]},["app",{sourceInterval:[104,117]},"moveToCommand",[]],["app",{sourceInterval:[124,145]},"absoluteLineToCommand",[]],["app",{sourceInterval:[152,173]},"relativeLineToCommand",[]],["app",{sourceInterval:[180,209]},"absoluteVerticalLineToCommand",[]],["app",{sourceInterval:[216,245]},"relativeVerticalLineToCommand",[]],["app",{sourceInterval:[252,283]},"absoluteHorizontalLineToCommand",[]],["app",{sourceInterval:[290,321]},"relativeHorizontalLineToCommand",[]],["app",{sourceInterval:[328,350]},"absoluteClosePathToken",[]],["app",{sourceInterval:[357,379]},"relativeClosePathToken",[]]]],absoluteClosePathToken:["define",{sourceInterval:[389,417]},null,[],["terminal",{sourceInterval:[414,417]},"Z"]],relativeClosePathToken:["define",{sourceInterval:[420,448]},null,[],["terminal",{sourceInterval:[445,448]},"z"]],absoluteLineToCommand:["define",{sourceInterval:[452,529]},null,[],["seq",{sourceInterval:[480,529]},["app",{sourceInterval:[480,499]},"absoluteLineToToken",[]],["star",{sourceInterval:[500,506]},["app",{sourceInterval:[500,505]},"space",[]]],["app",{sourceInterval:[507,529]},"coordinatePairSequence",[]]]],absoluteLineToToken:["define",{sourceInterval:[532,557]},null,[],["terminal",{sourceInterval:[554,557]},"L"]],relativeLineToCommand:["define",{sourceInterval:[560,637]},null,[],["seq",{sourceInterval:[588,637]},["app",{sourceInterval:[588,607]},"relativeLineToToken",[]],["star",{sourceInterval:[608,614]},["app",{sourceInterval:[608,613]},"space",[]]],["app",{sourceInterval:[615,637]},"coordinatePairSequence",[]]]],relativeLineToToken:["define",{sourceInterval:[640,665]},null,[],["terminal",{sourceInterval:[662,665]},"l"]],absoluteVerticalLineToCommand:["define",{sourceInterval:[669,758]},null,[],["seq",{sourceInterval:[705,758]},["app",{sourceInterval:[705,732]},"absoluteVerticalLineToToken",[]],["star",{sourceInterval:[733,739]},["app",{sourceInterval:[733,738]},"space",[]]],["app",{sourceInterval:[740,758]},"coordinateSequence",[]]]],absoluteVerticalLineToToken:["define",{sourceInterval:[761,794]},null,[],["terminal",{sourceInterval:[791,794]},"V"]],relativeVerticalLineToCommand:["define",{sourceInterval:[797,886]},null,[],["seq",{sourceInterval:[833,886]},["app",{sourceInterval:[833,860]},"relativeVerticalLineToToken",[]],["star",{sourceInterval:[861,867]},["app",{sourceInterval:[861,866]},"space",[]]],["app",{sourceInterval:[868,886]},"coordinateSequence",[]]]],relativeVerticalLineToToken:["define",{sourceInterval:[889,922]},null,[],["terminal",{sourceInterval:[919,922]},"v"]],absoluteHorizontalLineToCommand:["define",{sourceInterval:[926,1019]},null,[],["seq",{sourceInterval:[964,1019]},["app",{sourceInterval:[964,993]},"absoluteHorizontalLineToToken",[]],["star",{sourceInterval:[994,1e3]},["app",{sourceInterval:[994,999]},"space",[]]],["app",{sourceInterval:[1001,1019]},"coordinateSequence",[]]]],absoluteHorizontalLineToToken:["define",{sourceInterval:[1022,1057]},null,[],["terminal",{sourceInterval:[1054,1057]},"H"]],relativeHorizontalLineToCommand:["define",{sourceInterval:[1060,1153]},null,[],["seq",{sourceInterval:[1098,1153]},["app",{sourceInterval:[1098,1127]},"relativeHorizontalLineToToken",[]],["star",{sourceInterval:[1128,1134]},["app",{sourceInterval:[1128,1133]},"space",[]]],["app",{sourceInterval:[1135,1153]},"coordinateSequence",[]]]],relativeHorizontalLineToToken:["define",{sourceInterval:[1156,1191]},null,[],["terminal",{sourceInterval:[1188,1191]},"h"]],moveToCommand:["define",{sourceInterval:[1195,1252]},null,[],["seq",{sourceInterval:[1211,1252]},["app",{sourceInterval:[1211,1222]},"moveToToken",[]],["star",{sourceInterval:[1223,1229]},["app",{sourceInterval:[1223,1228]},"space",[]]],["app",{sourceInterval:[1230,1252]},"coordinatePairSequence",[]]]],moveToToken:["define",{sourceInterval:[1255,1278]},null,[],["alt",{sourceInterval:[1269,1278]},["terminal",{sourceInterval:[1269,1272]},"M"],["terminal",{sourceInterval:[1275,1278]},"m"]]],coordinatePairSequence_recursive:["define",{sourceInterval:[1311,1382]},null,[],["seq",{sourceInterval:[1311,1369]},["app",{sourceInterval:[1311,1325]},"coordinatePair",[]],["opt",{sourceInterval:[1326,1346]},["app",{sourceInterval:[1326,1345]},"coordinateSeparator",[]]],["app",{sourceInterval:[1347,1369]},"coordinatePairSequence",[]]]],coordinatePairSequence_single:["define",{sourceInterval:[1389,1413]},null,[],["app",{sourceInterval:[1389,1403]},"coordinatePair",[]]],coordinatePairSequence:["define",{sourceInterval:[1282,1413]},null,[],["alt",{sourceInterval:[1311,1413]},["app",{sourceInterval:[1311,1369]},"coordinatePairSequence_recursive",[]],["app",{sourceInterval:[1389,1403]},"coordinatePairSequence_single",[]]]],coordinateSequence_recursive:["define",{sourceInterval:[1442,1505]},null,[],["seq",{sourceInterval:[1442,1492]},["app",{sourceInterval:[1442,1452]},"coordinate",[]],["opt",{sourceInterval:[1453,1473]},["app",{sourceInterval:[1453,1472]},"coordinateSeparator",[]]],["app",{sourceInterval:[1474,1492]},"coordinateSequence",[]]]],coordinateSequence_single:["define",{sourceInterval:[1512,1531]},null,[],["app",{sourceInterval:[1512,1522]},"coordinate",[]]],coordinateSequence:["define",{sourceInterval:[1417,1531]},null,[],["alt",{sourceInterval:[1442,1531]},["app",{sourceInterval:[1442,1492]},"coordinateSequence_recursive",[]],["app",{sourceInterval:[1512,1522]},"coordinateSequence_single",[]]]],coordinatePair:["define",{sourceInterval:[1535,1593]},null,[],["seq",{sourceInterval:[1552,1593]},["app",{sourceInterval:[1552,1562]},"coordinate",[]],["app",{sourceInterval:[1563,1582]},"coordinateSeparator",[]],["app",{sourceInterval:[1583,1593]},"coordinate",[]]]],coordinate:["define",{sourceInterval:[1597,1623]},null,[],["seq",{sourceInterval:[1610,1623]},["opt",{sourceInterval:[1610,1615]},["app",{sourceInterval:[1610,1614]},"sign",[]]],["app",{sourceInterval:[1616,1623]},"integer",[]]]],coordinateSeparator_space:["define",{sourceInterval:[1653,1680]},null,[],["seq",{sourceInterval:[1653,1671]},["plus",{sourceInterval:[1653,1659]},["app",{sourceInterval:[1653,1658]},"space",[]]],["opt",{sourceInterval:[1660,1664]},["terminal",{sourceInterval:[1660,1663]},","]],["star",{sourceInterval:[1665,1671]},["app",{sourceInterval:[1665,1670]},"space",[]]]]],coordinateSeparator_comma:["define",{sourceInterval:[1687,1706]},null,[],["seq",{sourceInterval:[1687,1697]},["terminal",{sourceInterval:[1687,1690]},","],["star",{sourceInterval:[1691,1697]},["app",{sourceInterval:[1691,1696]},"space",[]]]]],coordinateSeparator:["define",{sourceInterval:[1627,1706]},null,[],["alt",{sourceInterval:[1653,1706]},["app",{sourceInterval:[1653,1671]},"coordinateSeparator_space",[]],["app",{sourceInterval:[1687,1697]},"coordinateSeparator_comma",[]]]],sign:["define",{sourceInterval:[1710,1726]},null,[],["alt",{sourceInterval:[1717,1726]},["terminal",{sourceInterval:[1717,1720]},"-"],["terminal",{sourceInterval:[1723,1726]},"+"]]],integer:["define",{sourceInterval:[1730,1750]},null,[],["plus",{sourceInterval:[1744,1750]},["app",{sourceInterval:[1744,1749]},"digit",[]]]]}]),I=m.createSemantics();I.addOperation("eval()",{coordinate(e,r){return parseInt(this.sourceString,10)}}),I.addOperation("coordinates()",{coordinatePair:(e,r,a)=>({x:e.eval(),y:a.eval()})}),I.addOperation("pairSequence()",{coordinatePairSequence_recursive:(e,r,a)=>[e.coordinates(),...a.pairSequence()],coordinatePairSequence_single:e=>[e.coordinates()],coordinatePairSequence:e=>e.pairSequence()}),I.addOperation("sequence()",{coordinateSequence_recursive:(e,r,a)=>[e.eval(),...a.sequence()],coordinateSequence_single:e=>[e.eval()],coordinateSequence:e=>e.sequence()}),I.addOperation("tokenize()",{moveToToken(e){return this.sourceString},relativeHorizontalLineToToken(e){return this.sourceString},absoluteLineToToken(e){return this.sourceString},relativeLineToToken(e){return this.sourceString},absoluteHorizontalLineToToken(e){return this.sourceString},relativeVerticalLineToToken(e){return this.sourceString},absoluteVerticalLineToToken(e){return this.sourceString}}),I.addOperation("command()",{drawToCommand:e=>e.command(),absoluteClosePathToken(e){return{type:this.sourceString}},relativeClosePathToken(e){return{type:this.sourceString}},moveToCommand:(e,r,a)=>({type:e.tokenize(),sequences:a.pairSequence()}),absoluteLineToCommand:(e,r,a)=>({type:e.tokenize(),sequences:a.pairSequence()}),relativeLineToCommand:(e,r,a)=>({type:e.tokenize(),sequences:a.pairSequence()}),absoluteVerticalLineToCommand:(e,r,a)=>({type:e.tokenize(),sequences:a.sequence().map(e=>({x:0,y:e}))}),relativeVerticalLineToCommand:(e,r,a)=>({type:e.tokenize(),sequences:a.sequence().map(e=>({x:0,y:e}))}),absoluteHorizontalLineToCommand:(e,r,a)=>({type:e.tokenize(),sequences:a.sequence().map(e=>({x:e,y:0}))}),relativeHorizontalLineToCommand:(e,r,a)=>({type:e.tokenize(),sequences:a.sequence().map(e=>({x:e,y:0}))})}),I.addOperation("run()",{command:(e,r,a,n,o)=>[...r.children.map(e=>e.command()),...n.children.map(e=>e.children.map(e=>e.command())).flat()]});let T=(0,c.xw)(["grammar",{source:'Program {\n  command\n    = space* (moveToCommand (space* drawToCommand)*)? space*\n\n  drawToCommand\n    = moveToCommand\n    | absoluteLineToCommand\n    | relativeLineToCommand\n    | absoluteVerticalLineToCommand\n    | relativeVerticalLineToCommand\n    | absoluteHorizontalLineToCommand\n    | relativeHorizontalLineToCommand\n    | absoluteClosePathToken\n    | relativeClosePathToken\n      \n  absoluteClosePathToken = "Z"\n  relativeClosePathToken = "z"\n\n  absoluteLineToCommand\n    = absoluteLineToToken space* coordinatePairSequence\n  absoluteLineToToken = "L"\n  relativeLineToCommand\n    = relativeLineToToken space* coordinatePairSequence\n  relativeLineToToken = "l"\n\n  absoluteVerticalLineToCommand\n    = absoluteVerticalLineToToken space* coordinateSequence\n  absoluteVerticalLineToToken = "V"\n  relativeVerticalLineToCommand\n    = relativeVerticalLineToToken space* coordinateSequence\n  relativeVerticalLineToToken = "v"\n\n  absoluteHorizontalLineToCommand\n    = absoluteHorizontalLineToToken space* coordinateSequence\n  absoluteHorizontalLineToToken = "H"\n  relativeHorizontalLineToCommand\n    = relativeHorizontalLineToToken space* coordinateSequence\n  relativeHorizontalLineToToken = "h"\n\n  moveToCommand = moveToToken space* coordinatePairSequence\n  moveToToken = "M" | "m"\n\n  coordinatePairSequence\n    = coordinatePair coordinateSeparator? coordinatePairSequence -- recursive\n    | coordinatePair -- single\n\n  coordinateSequence\n    = relativeNumber coordinateSeparator? coordinateSequence -- recursive\n    | relativeNumber --single\n\n  coordinatePair = relativeNumber coordinateSeparator relativeNumber\n\n  relativeNumber = sign? number\n\n  coordinateSeparator\n    = space+ ","? space* -- space\n    | "," space* -- comma\n\n  sign = "-" | "+"\n\n  number\n    =  digit* "." digit+ --decimal\n    | digit+ --integer\n}'},"Program",null,"command",{command:["define",{sourceInterval:[12,80]},null,[],["seq",{sourceInterval:[26,80]},["star",{sourceInterval:[26,32]},["app",{sourceInterval:[26,31]},"space",[]]],["opt",{sourceInterval:[33,73]},["seq",{sourceInterval:[34,71]},["app",{sourceInterval:[34,47]},"moveToCommand",[]],["star",{sourceInterval:[48,71]},["seq",{sourceInterval:[49,69]},["star",{sourceInterval:[49,55]},["app",{sourceInterval:[49,54]},"space",[]]],["app",{sourceInterval:[56,69]},"drawToCommand",[]]]]]],["star",{sourceInterval:[74,80]},["app",{sourceInterval:[74,79]},"space",[]]]]],drawToCommand:["define",{sourceInterval:[84,379]},null,[],["alt",{sourceInterval:[104,379]},["app",{sourceInterval:[104,117]},"moveToCommand",[]],["app",{sourceInterval:[124,145]},"absoluteLineToCommand",[]],["app",{sourceInterval:[152,173]},"relativeLineToCommand",[]],["app",{sourceInterval:[180,209]},"absoluteVerticalLineToCommand",[]],["app",{sourceInterval:[216,245]},"relativeVerticalLineToCommand",[]],["app",{sourceInterval:[252,283]},"absoluteHorizontalLineToCommand",[]],["app",{sourceInterval:[290,321]},"relativeHorizontalLineToCommand",[]],["app",{sourceInterval:[328,350]},"absoluteClosePathToken",[]],["app",{sourceInterval:[357,379]},"relativeClosePathToken",[]]]],absoluteClosePathToken:["define",{sourceInterval:[389,417]},null,[],["terminal",{sourceInterval:[414,417]},"Z"]],relativeClosePathToken:["define",{sourceInterval:[420,448]},null,[],["terminal",{sourceInterval:[445,448]},"z"]],absoluteLineToCommand:["define",{sourceInterval:[452,529]},null,[],["seq",{sourceInterval:[480,529]},["app",{sourceInterval:[480,499]},"absoluteLineToToken",[]],["star",{sourceInterval:[500,506]},["app",{sourceInterval:[500,505]},"space",[]]],["app",{sourceInterval:[507,529]},"coordinatePairSequence",[]]]],absoluteLineToToken:["define",{sourceInterval:[532,557]},null,[],["terminal",{sourceInterval:[554,557]},"L"]],relativeLineToCommand:["define",{sourceInterval:[560,637]},null,[],["seq",{sourceInterval:[588,637]},["app",{sourceInterval:[588,607]},"relativeLineToToken",[]],["star",{sourceInterval:[608,614]},["app",{sourceInterval:[608,613]},"space",[]]],["app",{sourceInterval:[615,637]},"coordinatePairSequence",[]]]],relativeLineToToken:["define",{sourceInterval:[640,665]},null,[],["terminal",{sourceInterval:[662,665]},"l"]],absoluteVerticalLineToCommand:["define",{sourceInterval:[669,758]},null,[],["seq",{sourceInterval:[705,758]},["app",{sourceInterval:[705,732]},"absoluteVerticalLineToToken",[]],["star",{sourceInterval:[733,739]},["app",{sourceInterval:[733,738]},"space",[]]],["app",{sourceInterval:[740,758]},"coordinateSequence",[]]]],absoluteVerticalLineToToken:["define",{sourceInterval:[761,794]},null,[],["terminal",{sourceInterval:[791,794]},"V"]],relativeVerticalLineToCommand:["define",{sourceInterval:[797,886]},null,[],["seq",{sourceInterval:[833,886]},["app",{sourceInterval:[833,860]},"relativeVerticalLineToToken",[]],["star",{sourceInterval:[861,867]},["app",{sourceInterval:[861,866]},"space",[]]],["app",{sourceInterval:[868,886]},"coordinateSequence",[]]]],relativeVerticalLineToToken:["define",{sourceInterval:[889,922]},null,[],["terminal",{sourceInterval:[919,922]},"v"]],absoluteHorizontalLineToCommand:["define",{sourceInterval:[926,1019]},null,[],["seq",{sourceInterval:[964,1019]},["app",{sourceInterval:[964,993]},"absoluteHorizontalLineToToken",[]],["star",{sourceInterval:[994,1e3]},["app",{sourceInterval:[994,999]},"space",[]]],["app",{sourceInterval:[1001,1019]},"coordinateSequence",[]]]],absoluteHorizontalLineToToken:["define",{sourceInterval:[1022,1057]},null,[],["terminal",{sourceInterval:[1054,1057]},"H"]],relativeHorizontalLineToCommand:["define",{sourceInterval:[1060,1153]},null,[],["seq",{sourceInterval:[1098,1153]},["app",{sourceInterval:[1098,1127]},"relativeHorizontalLineToToken",[]],["star",{sourceInterval:[1128,1134]},["app",{sourceInterval:[1128,1133]},"space",[]]],["app",{sourceInterval:[1135,1153]},"coordinateSequence",[]]]],relativeHorizontalLineToToken:["define",{sourceInterval:[1156,1191]},null,[],["terminal",{sourceInterval:[1188,1191]},"h"]],moveToCommand:["define",{sourceInterval:[1195,1252]},null,[],["seq",{sourceInterval:[1211,1252]},["app",{sourceInterval:[1211,1222]},"moveToToken",[]],["star",{sourceInterval:[1223,1229]},["app",{sourceInterval:[1223,1228]},"space",[]]],["app",{sourceInterval:[1230,1252]},"coordinatePairSequence",[]]]],moveToToken:["define",{sourceInterval:[1255,1278]},null,[],["alt",{sourceInterval:[1269,1278]},["terminal",{sourceInterval:[1269,1272]},"M"],["terminal",{sourceInterval:[1275,1278]},"m"]]],coordinatePairSequence_recursive:["define",{sourceInterval:[1311,1382]},null,[],["seq",{sourceInterval:[1311,1369]},["app",{sourceInterval:[1311,1325]},"coordinatePair",[]],["opt",{sourceInterval:[1326,1346]},["app",{sourceInterval:[1326,1345]},"coordinateSeparator",[]]],["app",{sourceInterval:[1347,1369]},"coordinatePairSequence",[]]]],coordinatePairSequence_single:["define",{sourceInterval:[1389,1413]},null,[],["app",{sourceInterval:[1389,1403]},"coordinatePair",[]]],coordinatePairSequence:["define",{sourceInterval:[1282,1413]},null,[],["alt",{sourceInterval:[1311,1413]},["app",{sourceInterval:[1311,1369]},"coordinatePairSequence_recursive",[]],["app",{sourceInterval:[1389,1403]},"coordinatePairSequence_single",[]]]],coordinateSequence_recursive:["define",{sourceInterval:[1442,1509]},null,[],["seq",{sourceInterval:[1442,1496]},["app",{sourceInterval:[1442,1456]},"relativeNumber",[]],["opt",{sourceInterval:[1457,1477]},["app",{sourceInterval:[1457,1476]},"coordinateSeparator",[]]],["app",{sourceInterval:[1478,1496]},"coordinateSequence",[]]]],coordinateSequence_single:["define",{sourceInterval:[1516,1539]},null,[],["app",{sourceInterval:[1516,1530]},"relativeNumber",[]]],coordinateSequence:["define",{sourceInterval:[1417,1539]},null,[],["alt",{sourceInterval:[1442,1539]},["app",{sourceInterval:[1442,1496]},"coordinateSequence_recursive",[]],["app",{sourceInterval:[1516,1530]},"coordinateSequence_single",[]]]],coordinatePair:["define",{sourceInterval:[1543,1609]},null,[],["seq",{sourceInterval:[1560,1609]},["app",{sourceInterval:[1560,1574]},"relativeNumber",[]],["app",{sourceInterval:[1575,1594]},"coordinateSeparator",[]],["app",{sourceInterval:[1595,1609]},"relativeNumber",[]]]],relativeNumber:["define",{sourceInterval:[1613,1642]},null,[],["seq",{sourceInterval:[1630,1642]},["opt",{sourceInterval:[1630,1635]},["app",{sourceInterval:[1630,1634]},"sign",[]]],["app",{sourceInterval:[1636,1642]},"number",[]]]],coordinateSeparator_space:["define",{sourceInterval:[1672,1699]},null,[],["seq",{sourceInterval:[1672,1690]},["plus",{sourceInterval:[1672,1678]},["app",{sourceInterval:[1672,1677]},"space",[]]],["opt",{sourceInterval:[1679,1683]},["terminal",{sourceInterval:[1679,1682]},","]],["star",{sourceInterval:[1684,1690]},["app",{sourceInterval:[1684,1689]},"space",[]]]]],coordinateSeparator_comma:["define",{sourceInterval:[1706,1725]},null,[],["seq",{sourceInterval:[1706,1716]},["terminal",{sourceInterval:[1706,1709]},","],["star",{sourceInterval:[1710,1716]},["app",{sourceInterval:[1710,1715]},"space",[]]]]],coordinateSeparator:["define",{sourceInterval:[1646,1725]},null,[],["alt",{sourceInterval:[1672,1725]},["app",{sourceInterval:[1672,1690]},"coordinateSeparator_space",[]],["app",{sourceInterval:[1706,1716]},"coordinateSeparator_comma",[]]]],sign:["define",{sourceInterval:[1729,1745]},null,[],["alt",{sourceInterval:[1736,1745]},["terminal",{sourceInterval:[1736,1739]},"-"],["terminal",{sourceInterval:[1742,1745]},"+"]]],number_decimal:["define",{sourceInterval:[1763,1790]},null,[],["seq",{sourceInterval:[1763,1780]},["star",{sourceInterval:[1763,1769]},["app",{sourceInterval:[1763,1768]},"digit",[]]],["terminal",{sourceInterval:[1770,1773]},"."],["plus",{sourceInterval:[1774,1780]},["app",{sourceInterval:[1774,1779]},"digit",[]]]]],number_integer:["define",{sourceInterval:[1797,1813]},null,[],["plus",{sourceInterval:[1797,1803]},["app",{sourceInterval:[1797,1802]},"digit",[]]]],number:["define",{sourceInterval:[1749,1813]},null,[],["alt",{sourceInterval:[1763,1813]},["app",{sourceInterval:[1763,1780]},"number_decimal",[]],["app",{sourceInterval:[1797,1803]},"number_integer",[]]]]}]),S=T.createSemantics();S.addOperation("eval()",{relativeNumber(e,r){return parseFloat(this.sourceString)}}),S.addOperation("coordinates()",{coordinatePair:(e,r,a)=>({x:e.eval(),y:a.eval()})}),S.addOperation("pairSequence()",{coordinatePairSequence_recursive:(e,r,a)=>[e.coordinates(),...a.pairSequence()],coordinatePairSequence_single:e=>[e.coordinates()],coordinatePairSequence:e=>e.pairSequence()}),S.addOperation("sequence()",{coordinateSequence_recursive:(e,r,a)=>[e.eval(),...a.sequence()],coordinateSequence_single:e=>[e.eval()],coordinateSequence:e=>e.sequence()}),S.addOperation("tokenize()",{moveToToken(e){return this.sourceString},relativeHorizontalLineToToken(e){return this.sourceString},absoluteLineToToken(e){return this.sourceString},relativeLineToToken(e){return this.sourceString},absoluteHorizontalLineToToken(e){return this.sourceString},relativeVerticalLineToToken(e){return this.sourceString},absoluteVerticalLineToToken(e){return this.sourceString}}),S.addOperation("command()",{drawToCommand:e=>e.command(),absoluteClosePathToken(e){return{type:this.sourceString}},relativeClosePathToken(e){return{type:this.sourceString}},moveToCommand:(e,r,a)=>({type:e.tokenize(),sequences:a.pairSequence()}),absoluteLineToCommand:(e,r,a)=>({type:e.tokenize(),sequences:a.pairSequence()}),relativeLineToCommand:(e,r,a)=>({type:e.tokenize(),sequences:a.pairSequence()}),absoluteVerticalLineToCommand:(e,r,a)=>({type:e.tokenize(),sequences:a.sequence().map(e=>({x:0,y:e}))}),relativeVerticalLineToCommand:(e,r,a)=>({type:e.tokenize(),sequences:a.sequence().map(e=>({x:0,y:e}))}),absoluteHorizontalLineToCommand:(e,r,a)=>({type:e.tokenize(),sequences:a.sequence().map(e=>({x:e,y:0}))}),relativeHorizontalLineToCommand:(e,r,a)=>({type:e.tokenize(),sequences:a.sequence().map(e=>({x:e,y:0}))})}),S.addOperation("run()",{command:(e,r,a,n,o)=>[...r.children.map(e=>e.command()),...n.children.map(e=>e.children.map(e=>e.command())).flat()]});let q=(0,c.xw)(["grammar",{source:'Program {\n  command\n    = space* (moveToCommand (space* drawToCommand)*)? space*\n\n  drawToCommand\n    = moveToCommand\n    | absoluteLineToCommand\n    | relativeLineToCommand\n    | absoluteVerticalLineToCommand\n    | relativeVerticalLineToCommand\n    | absoluteHorizontalLineToCommand\n    | relativeHorizontalLineToCommand\n    | absoluteEllipticalArcCommand\n    | relativeEllipticalArcCommand\n    | absoluteClosePathToken\n    | relativeClosePathToken\n\n  absoluteEllipticalArcCommand\n    = absoluteEllipticalArcToken space* ellipticalArcArgumentSequence\n  absoluteEllipticalArcToken = "A"\n  relativeEllipticalArcCommand\n    = relativeEllipticalArcToken space* ellipticalArcArgumentSequence\n  relativeEllipticalArcToken = "a"\n\n  ellipticalArcArgumentSequence\n    = ellipticalArcArgument --single\n      | (ellipticalArcArgument coordinateSeparator? ellipticalArcArgumentSequence) -- recursive\n\n  ellipticalArcArgument\n    = coordinatePair coordinateSeparator? relativeNumber coordinateSeparator\n      flag coordinateSeparator? flag coordinateSeparator? coordinatePair\n\n  absoluteClosePathToken = "Z"\n  relativeClosePathToken = "z"\n\n  absoluteLineToCommand\n    = absoluteLineToToken space* coordinatePairSequence\n  absoluteLineToToken = "L"\n  relativeLineToCommand\n    = relativeLineToToken space* coordinatePairSequence\n  relativeLineToToken = "l"\n\n  absoluteVerticalLineToCommand\n    = absoluteVerticalLineToToken space* coordinateSequence\n  absoluteVerticalLineToToken = "V"\n  relativeVerticalLineToCommand\n    = relativeVerticalLineToToken space* coordinateSequence\n  relativeVerticalLineToToken = "v"\n\n  absoluteHorizontalLineToCommand\n    = absoluteHorizontalLineToToken space* coordinateSequence\n  absoluteHorizontalLineToToken = "H"\n  relativeHorizontalLineToCommand\n    = relativeHorizontalLineToToken space* coordinateSequence\n  relativeHorizontalLineToToken = "h"\n\n  moveToCommand = moveToToken space* coordinatePairSequence\n  moveToToken = "M" | "m"\n\n  coordinatePairSequence\n    = coordinatePair coordinateSeparator? coordinatePairSequence -- recursive\n    | coordinatePair -- single\n\n  coordinateSequence\n    = relativeNumber coordinateSeparator? coordinateSequence -- recursive\n    | relativeNumber --single\n\n  coordinatePair = relativeNumber coordinateSeparator? relativeNumber\n\n  relativeNumber = sign? number\n\n  coordinateSeparator\n    = space+ ","? space* -- space\n    | "," space* -- comma\n\n  sign = "-" | "+"\n  flag = "0" | "1"\n\n  number\n    =  digit* "." digit+ --decimal\n    | digit+ --integer\n}'},"Program",null,"command",{command:["define",{sourceInterval:[12,80]},null,[],["seq",{sourceInterval:[26,80]},["star",{sourceInterval:[26,32]},["app",{sourceInterval:[26,31]},"space",[]]],["opt",{sourceInterval:[33,73]},["seq",{sourceInterval:[34,71]},["app",{sourceInterval:[34,47]},"moveToCommand",[]],["star",{sourceInterval:[48,71]},["seq",{sourceInterval:[49,69]},["star",{sourceInterval:[49,55]},["app",{sourceInterval:[49,54]},"space",[]]],["app",{sourceInterval:[56,69]},"drawToCommand",[]]]]]],["star",{sourceInterval:[74,80]},["app",{sourceInterval:[74,79]},"space",[]]]]],drawToCommand:["define",{sourceInterval:[84,449]},null,[],["alt",{sourceInterval:[104,449]},["app",{sourceInterval:[104,117]},"moveToCommand",[]],["app",{sourceInterval:[124,145]},"absoluteLineToCommand",[]],["app",{sourceInterval:[152,173]},"relativeLineToCommand",[]],["app",{sourceInterval:[180,209]},"absoluteVerticalLineToCommand",[]],["app",{sourceInterval:[216,245]},"relativeVerticalLineToCommand",[]],["app",{sourceInterval:[252,283]},"absoluteHorizontalLineToCommand",[]],["app",{sourceInterval:[290,321]},"relativeHorizontalLineToCommand",[]],["app",{sourceInterval:[328,356]},"absoluteEllipticalArcCommand",[]],["app",{sourceInterval:[363,391]},"relativeEllipticalArcCommand",[]],["app",{sourceInterval:[398,420]},"absoluteClosePathToken",[]],["app",{sourceInterval:[427,449]},"relativeClosePathToken",[]]]],absoluteEllipticalArcCommand:["define",{sourceInterval:[453,551]},null,[],["seq",{sourceInterval:[488,551]},["app",{sourceInterval:[488,514]},"absoluteEllipticalArcToken",[]],["star",{sourceInterval:[515,521]},["app",{sourceInterval:[515,520]},"space",[]]],["app",{sourceInterval:[522,551]},"ellipticalArcArgumentSequence",[]]]],absoluteEllipticalArcToken:["define",{sourceInterval:[554,586]},null,[],["terminal",{sourceInterval:[583,586]},"A"]],relativeEllipticalArcCommand:["define",{sourceInterval:[589,687]},null,[],["seq",{sourceInterval:[624,687]},["app",{sourceInterval:[624,650]},"relativeEllipticalArcToken",[]],["star",{sourceInterval:[651,657]},["app",{sourceInterval:[651,656]},"space",[]]],["app",{sourceInterval:[658,687]},"ellipticalArcArgumentSequence",[]]]],relativeEllipticalArcToken:["define",{sourceInterval:[690,722]},null,[],["terminal",{sourceInterval:[719,722]},"a"]],ellipticalArcArgumentSequence_single:["define",{sourceInterval:[762,792]},null,[],["app",{sourceInterval:[762,783]},"ellipticalArcArgument",[]]],ellipticalArcArgumentSequence_recursive:["define",{sourceInterval:[801,888]},null,[],["seq",{sourceInterval:[801,875]},["app",{sourceInterval:[802,823]},"ellipticalArcArgument",[]],["opt",{sourceInterval:[824,844]},["app",{sourceInterval:[824,843]},"coordinateSeparator",[]]],["app",{sourceInterval:[845,874]},"ellipticalArcArgumentSequence",[]]]],ellipticalArcArgumentSequence:["define",{sourceInterval:[726,888]},null,[],["alt",{sourceInterval:[762,888]},["app",{sourceInterval:[762,783]},"ellipticalArcArgumentSequence_single",[]],["app",{sourceInterval:[801,875]},"ellipticalArcArgumentSequence_recursive",[]]]],ellipticalArcArgument:["define",{sourceInterval:[892,1063]},null,[],["seq",{sourceInterval:[920,1063]},["app",{sourceInterval:[920,934]},"coordinatePair",[]],["opt",{sourceInterval:[935,955]},["app",{sourceInterval:[935,954]},"coordinateSeparator",[]]],["app",{sourceInterval:[956,970]},"relativeNumber",[]],["app",{sourceInterval:[971,990]},"coordinateSeparator",[]],["app",{sourceInterval:[997,1001]},"flag",[]],["opt",{sourceInterval:[1002,1022]},["app",{sourceInterval:[1002,1021]},"coordinateSeparator",[]]],["app",{sourceInterval:[1023,1027]},"flag",[]],["opt",{sourceInterval:[1028,1048]},["app",{sourceInterval:[1028,1047]},"coordinateSeparator",[]]],["app",{sourceInterval:[1049,1063]},"coordinatePair",[]]]],absoluteClosePathToken:["define",{sourceInterval:[1067,1095]},null,[],["terminal",{sourceInterval:[1092,1095]},"Z"]],relativeClosePathToken:["define",{sourceInterval:[1098,1126]},null,[],["terminal",{sourceInterval:[1123,1126]},"z"]],absoluteLineToCommand:["define",{sourceInterval:[1130,1207]},null,[],["seq",{sourceInterval:[1158,1207]},["app",{sourceInterval:[1158,1177]},"absoluteLineToToken",[]],["star",{sourceInterval:[1178,1184]},["app",{sourceInterval:[1178,1183]},"space",[]]],["app",{sourceInterval:[1185,1207]},"coordinatePairSequence",[]]]],absoluteLineToToken:["define",{sourceInterval:[1210,1235]},null,[],["terminal",{sourceInterval:[1232,1235]},"L"]],relativeLineToCommand:["define",{sourceInterval:[1238,1315]},null,[],["seq",{sourceInterval:[1266,1315]},["app",{sourceInterval:[1266,1285]},"relativeLineToToken",[]],["star",{sourceInterval:[1286,1292]},["app",{sourceInterval:[1286,1291]},"space",[]]],["app",{sourceInterval:[1293,1315]},"coordinatePairSequence",[]]]],relativeLineToToken:["define",{sourceInterval:[1318,1343]},null,[],["terminal",{sourceInterval:[1340,1343]},"l"]],absoluteVerticalLineToCommand:["define",{sourceInterval:[1347,1436]},null,[],["seq",{sourceInterval:[1383,1436]},["app",{sourceInterval:[1383,1410]},"absoluteVerticalLineToToken",[]],["star",{sourceInterval:[1411,1417]},["app",{sourceInterval:[1411,1416]},"space",[]]],["app",{sourceInterval:[1418,1436]},"coordinateSequence",[]]]],absoluteVerticalLineToToken:["define",{sourceInterval:[1439,1472]},null,[],["terminal",{sourceInterval:[1469,1472]},"V"]],relativeVerticalLineToCommand:["define",{sourceInterval:[1475,1564]},null,[],["seq",{sourceInterval:[1511,1564]},["app",{sourceInterval:[1511,1538]},"relativeVerticalLineToToken",[]],["star",{sourceInterval:[1539,1545]},["app",{sourceInterval:[1539,1544]},"space",[]]],["app",{sourceInterval:[1546,1564]},"coordinateSequence",[]]]],relativeVerticalLineToToken:["define",{sourceInterval:[1567,1600]},null,[],["terminal",{sourceInterval:[1597,1600]},"v"]],absoluteHorizontalLineToCommand:["define",{sourceInterval:[1604,1697]},null,[],["seq",{sourceInterval:[1642,1697]},["app",{sourceInterval:[1642,1671]},"absoluteHorizontalLineToToken",[]],["star",{sourceInterval:[1672,1678]},["app",{sourceInterval:[1672,1677]},"space",[]]],["app",{sourceInterval:[1679,1697]},"coordinateSequence",[]]]],absoluteHorizontalLineToToken:["define",{sourceInterval:[1700,1735]},null,[],["terminal",{sourceInterval:[1732,1735]},"H"]],relativeHorizontalLineToCommand:["define",{sourceInterval:[1738,1831]},null,[],["seq",{sourceInterval:[1776,1831]},["app",{sourceInterval:[1776,1805]},"relativeHorizontalLineToToken",[]],["star",{sourceInterval:[1806,1812]},["app",{sourceInterval:[1806,1811]},"space",[]]],["app",{sourceInterval:[1813,1831]},"coordinateSequence",[]]]],relativeHorizontalLineToToken:["define",{sourceInterval:[1834,1869]},null,[],["terminal",{sourceInterval:[1866,1869]},"h"]],moveToCommand:["define",{sourceInterval:[1873,1930]},null,[],["seq",{sourceInterval:[1889,1930]},["app",{sourceInterval:[1889,1900]},"moveToToken",[]],["star",{sourceInterval:[1901,1907]},["app",{sourceInterval:[1901,1906]},"space",[]]],["app",{sourceInterval:[1908,1930]},"coordinatePairSequence",[]]]],moveToToken:["define",{sourceInterval:[1933,1956]},null,[],["alt",{sourceInterval:[1947,1956]},["terminal",{sourceInterval:[1947,1950]},"M"],["terminal",{sourceInterval:[1953,1956]},"m"]]],coordinatePairSequence_recursive:["define",{sourceInterval:[1989,2060]},null,[],["seq",{sourceInterval:[1989,2047]},["app",{sourceInterval:[1989,2003]},"coordinatePair",[]],["opt",{sourceInterval:[2004,2024]},["app",{sourceInterval:[2004,2023]},"coordinateSeparator",[]]],["app",{sourceInterval:[2025,2047]},"coordinatePairSequence",[]]]],coordinatePairSequence_single:["define",{sourceInterval:[2067,2091]},null,[],["app",{sourceInterval:[2067,2081]},"coordinatePair",[]]],coordinatePairSequence:["define",{sourceInterval:[1960,2091]},null,[],["alt",{sourceInterval:[1989,2091]},["app",{sourceInterval:[1989,2047]},"coordinatePairSequence_recursive",[]],["app",{sourceInterval:[2067,2081]},"coordinatePairSequence_single",[]]]],coordinateSequence_recursive:["define",{sourceInterval:[2120,2187]},null,[],["seq",{sourceInterval:[2120,2174]},["app",{sourceInterval:[2120,2134]},"relativeNumber",[]],["opt",{sourceInterval:[2135,2155]},["app",{sourceInterval:[2135,2154]},"coordinateSeparator",[]]],["app",{sourceInterval:[2156,2174]},"coordinateSequence",[]]]],coordinateSequence_single:["define",{sourceInterval:[2194,2217]},null,[],["app",{sourceInterval:[2194,2208]},"relativeNumber",[]]],coordinateSequence:["define",{sourceInterval:[2095,2217]},null,[],["alt",{sourceInterval:[2120,2217]},["app",{sourceInterval:[2120,2174]},"coordinateSequence_recursive",[]],["app",{sourceInterval:[2194,2208]},"coordinateSequence_single",[]]]],coordinatePair:["define",{sourceInterval:[2221,2288]},null,[],["seq",{sourceInterval:[2238,2288]},["app",{sourceInterval:[2238,2252]},"relativeNumber",[]],["opt",{sourceInterval:[2253,2273]},["app",{sourceInterval:[2253,2272]},"coordinateSeparator",[]]],["app",{sourceInterval:[2274,2288]},"relativeNumber",[]]]],relativeNumber:["define",{sourceInterval:[2292,2321]},null,[],["seq",{sourceInterval:[2309,2321]},["opt",{sourceInterval:[2309,2314]},["app",{sourceInterval:[2309,2313]},"sign",[]]],["app",{sourceInterval:[2315,2321]},"number",[]]]],coordinateSeparator_space:["define",{sourceInterval:[2351,2378]},null,[],["seq",{sourceInterval:[2351,2369]},["plus",{sourceInterval:[2351,2357]},["app",{sourceInterval:[2351,2356]},"space",[]]],["opt",{sourceInterval:[2358,2362]},["terminal",{sourceInterval:[2358,2361]},","]],["star",{sourceInterval:[2363,2369]},["app",{sourceInterval:[2363,2368]},"space",[]]]]],coordinateSeparator_comma:["define",{sourceInterval:[2385,2404]},null,[],["seq",{sourceInterval:[2385,2395]},["terminal",{sourceInterval:[2385,2388]},","],["star",{sourceInterval:[2389,2395]},["app",{sourceInterval:[2389,2394]},"space",[]]]]],coordinateSeparator:["define",{sourceInterval:[2325,2404]},null,[],["alt",{sourceInterval:[2351,2404]},["app",{sourceInterval:[2351,2369]},"coordinateSeparator_space",[]],["app",{sourceInterval:[2385,2395]},"coordinateSeparator_comma",[]]]],sign:["define",{sourceInterval:[2408,2424]},null,[],["alt",{sourceInterval:[2415,2424]},["terminal",{sourceInterval:[2415,2418]},"-"],["terminal",{sourceInterval:[2421,2424]},"+"]]],flag:["define",{sourceInterval:[2427,2443]},null,[],["alt",{sourceInterval:[2434,2443]},["terminal",{sourceInterval:[2434,2437]},"0"],["terminal",{sourceInterval:[2440,2443]},"1"]]],number_decimal:["define",{sourceInterval:[2461,2488]},null,[],["seq",{sourceInterval:[2461,2478]},["star",{sourceInterval:[2461,2467]},["app",{sourceInterval:[2461,2466]},"digit",[]]],["terminal",{sourceInterval:[2468,2471]},"."],["plus",{sourceInterval:[2472,2478]},["app",{sourceInterval:[2472,2477]},"digit",[]]]]],number_integer:["define",{sourceInterval:[2495,2511]},null,[],["plus",{sourceInterval:[2495,2501]},["app",{sourceInterval:[2495,2500]},"digit",[]]]],number:["define",{sourceInterval:[2447,2511]},null,[],["alt",{sourceInterval:[2461,2511]},["app",{sourceInterval:[2461,2478]},"number_decimal",[]],["app",{sourceInterval:[2495,2501]},"number_integer",[]]]]}]),C=q.createSemantics();C.addOperation("eval()",{relativeNumber(e,r){return parseFloat(this.sourceString)},flag(e){return+("0"!==this.sourceString)}}),C.addOperation("coordinates()",{coordinatePair:(e,r,a)=>({x:e.eval(),y:a.eval()})}),C.addOperation("pairSequence()",{coordinatePairSequence_recursive:(e,r,a)=>[e.coordinates(),...a.pairSequence()],coordinatePairSequence_single:e=>[e.coordinates()],coordinatePairSequence:e=>e.pairSequence()}),C.addOperation("sequence()",{coordinateSequence_recursive:(e,r,a)=>[e.eval(),...a.sequence()],coordinateSequence_single:e=>[e.eval()],coordinateSequence:e=>e.sequence()}),C.addOperation("tokenize()",{moveToToken(e){return this.sourceString},relativeHorizontalLineToToken(e){return this.sourceString},absoluteLineToToken(e){return this.sourceString},relativeLineToToken(e){return this.sourceString},absoluteHorizontalLineToToken(e){return this.sourceString},relativeVerticalLineToToken(e){return this.sourceString},absoluteVerticalLineToToken(e){return this.sourceString},relativeEllipticalArcToken(e){return this.sourceString},absoluteEllipticalArcToken(e){return this.sourceString}}),C.addOperation("arc()",{ellipticalArcArgument:(e,r,a,n,o,t,l,c,i)=>({r:e.coordinates(),xAxisRotation:a.eval(),sweepFlag:o.eval(),largeArcFlag:l.eval(),to:i.coordinates()})}),C.addOperation("arcSequence()",{ellipticalArcArgumentSequence_recursive:(e,r,a)=>[e.arc(),...a.arcSequence()],ellipticalArcArgumentSequence_single:e=>[e.arc()],ellipticalArcArgumentSequence:e=>e.arcSequence()}),C.addOperation("command()",{drawToCommand:e=>e.command(),absoluteClosePathToken(e){return{type:this.sourceString}},relativeClosePathToken(e){return{type:this.sourceString}},moveToCommand:(e,r,a)=>({type:e.tokenize(),sequences:a.pairSequence()}),absoluteLineToCommand:(e,r,a)=>({type:e.tokenize(),sequences:a.pairSequence()}),relativeLineToCommand:(e,r,a)=>({type:e.tokenize(),sequences:a.pairSequence()}),absoluteVerticalLineToCommand:(e,r,a)=>({type:e.tokenize(),sequences:a.sequence().map(e=>({x:0,y:e}))}),relativeVerticalLineToCommand:(e,r,a)=>({type:e.tokenize(),sequences:a.sequence().map(e=>({x:0,y:e}))}),absoluteHorizontalLineToCommand:(e,r,a)=>({type:e.tokenize(),sequences:a.sequence().map(e=>({x:e,y:0}))}),relativeHorizontalLineToCommand:(e,r,a)=>({type:e.tokenize(),sequences:a.sequence().map(e=>({x:e,y:0}))}),relativeEllipticalArcCommand:(e,r,a)=>({type:e.tokenize(),sequences:a.arcSequence()}),absoluteEllipticalArcCommand:(e,r,a)=>({type:e.tokenize(),sequences:a.arcSequence()})}),C.addOperation("run()",{command:(e,r,a,n,o)=>[...r.children.map(e=>e.command()),...n.children.map(e=>e.children.map(e=>e.command())).flat()]});let b=(0,c.xw)(["grammar",{source:'Program {\n  command\n    = space* (moveToCommand (space* drawToCommand)*)? space*\n\n  drawToCommand\n    = moveToCommand\n    | absoluteLineToCommand\n    | relativeLineToCommand\n    | absoluteVerticalLineToCommand\n    | relativeVerticalLineToCommand\n    | absoluteHorizontalLineToCommand\n    | relativeHorizontalLineToCommand\n    | absoluteEllipticalArcCommand\n    | relativeEllipticalArcCommand\n    | absoluteSmoothQuadraticBezierCurveToCommand\n    | relativeSmoothQuadraticBezierCurveToCommand\n    | absoluteQuadraticBezierCurveToCommand\n    | relativeQuadraticBezierCurveToCommand\n    | absoluteSmoothCubicBezierCurveToCommand\n    | relativeSmoothCubicBezierCurveToCommand\n    | absoluteCubicBezierCurveToCommand\n    | relativeCubicBezierCurveToCommand\n    | absoluteClosePathToken\n    | relativeClosePathToken\n\n  absoluteCubicBezierCurveToCommand\n    = absoluteCubicBezierCurveToToken space* coordinatePairTripletSequence\n  absoluteCubicBezierCurveToToken = "C"\n  relativeCubicBezierCurveToCommand\n    = relativeCubicBezierCurveToToken space* coordinatePairTripletSequence\n  relativeCubicBezierCurveToToken = "c"\n\n  absoluteSmoothCubicBezierCurveToCommand\n    = absoluteSmoothCubicBezierCurveToToken space* coordinatePairTupleSequence\n  absoluteSmoothCubicBezierCurveToToken = "S"\n  relativeSmoothCubicBezierCurveToCommand\n    = relativeSmoothCubicBezierCurveToToken space* coordinatePairTupleSequence\n  relativeSmoothCubicBezierCurveToToken = "s"\n\n  absoluteQuadraticBezierCurveToCommand\n    = absoluteQuadraticBezierCurveToToken space* coordinatePairTupleSequence\n  absoluteQuadraticBezierCurveToToken = "Q"\n  relativeQuadraticBezierCurveToCommand\n    = relativeQuadraticBezierCurveToToken space* coordinatePairTupleSequence\n  relativeQuadraticBezierCurveToToken = "q"\n\n  absoluteSmoothQuadraticBezierCurveToCommand\n    = absoluteSmoothQuadraticBezierCurveToToken space* coordinatePairSequence\n  absoluteSmoothQuadraticBezierCurveToToken = "T"\n  relativeSmoothQuadraticBezierCurveToCommand\n    = relativeSmoothQuadraticBezierCurveToToken space* coordinatePairSequence\n  relativeSmoothQuadraticBezierCurveToToken = "t"\n\n  absoluteEllipticalArcCommand\n    = absoluteEllipticalArcToken space* ellipticalArcArgumentSequence\n  absoluteEllipticalArcToken = "A"\n  relativeEllipticalArcCommand\n    = relativeEllipticalArcToken space* ellipticalArcArgumentSequence\n  relativeEllipticalArcToken = "a"\n\n  ellipticalArcArgumentSequence\n    = ellipticalArcArgument --single\n      | (ellipticalArcArgument coordinateSeparator? ellipticalArcArgumentSequence) -- recursive\n\n  ellipticalArcArgument\n    = coordinatePair coordinateSeparator? relativeNumber coordinateSeparator\n      flag coordinateSeparator? flag coordinateSeparator? coordinatePair\n\n  absoluteClosePathToken = "Z"\n  relativeClosePathToken = "z"\n\n  absoluteLineToCommand\n    = absoluteLineToToken space* coordinatePairSequence\n  absoluteLineToToken = "L"\n  relativeLineToCommand\n    = relativeLineToToken space* coordinatePairSequence\n  relativeLineToToken = "l"\n\n  absoluteVerticalLineToCommand\n    = absoluteVerticalLineToToken space* coordinateSequence\n  absoluteVerticalLineToToken = "V"\n  relativeVerticalLineToCommand\n    = relativeVerticalLineToToken space* coordinateSequence\n  relativeVerticalLineToToken = "v"\n\n  absoluteHorizontalLineToCommand\n    = absoluteHorizontalLineToToken space* coordinateSequence\n  absoluteHorizontalLineToToken = "H"\n  relativeHorizontalLineToCommand\n    = relativeHorizontalLineToToken space* coordinateSequence\n  relativeHorizontalLineToToken = "h"\n\n  moveToCommand = moveToToken space* coordinatePairSequence\n  moveToToken = "M" | "m"\n\n  coordinatePairTripletSequence\n    = coordinatePairTriplet coordinateSeparator? coordinatePairTripletSequence -- recursive\n      | coordinatePairTriplet -- single\n\n  coordinatePairTupleSequence\n    = coordinatePairTuple coordinateSeparator? coordinatePairTupleSequence -- recursive\n      | coordinatePairTuple -- single\n\n  coordinatePairSequence\n    = coordinatePair coordinateSeparator? coordinatePairSequence -- recursive\n    | coordinatePair -- single\n\n  coordinateSequence\n    = relativeNumber coordinateSeparator? coordinateSequence -- recursive\n    | relativeNumber --single\n\n  coordinatePairTriplet = coordinatePair coordinateSeparator? coordinatePair coordinateSeparator? coordinatePair\n\n  coordinatePairTuple = coordinatePair coordinateSeparator? coordinatePair\n\n  coordinatePair = relativeNumber coordinateSeparator relativeNumber\n\n  relativeNumber = sign? number\n\n  coordinateSeparator\n    = space+ ","? space* -- space\n    | "," space* -- comma\n\n  sign = "-" | "+"\n  flag = "0" | "1"\n\n  number\n    =  digit* "." digit+ --decimal\n    | digit+ --integer\n}'},"Program",null,"command",{command:["define",{sourceInterval:[12,80]},null,[],["seq",{sourceInterval:[26,80]},["star",{sourceInterval:[26,32]},["app",{sourceInterval:[26,31]},"space",[]]],["opt",{sourceInterval:[33,73]},["seq",{sourceInterval:[34,71]},["app",{sourceInterval:[34,47]},"moveToCommand",[]],["star",{sourceInterval:[48,71]},["seq",{sourceInterval:[49,69]},["star",{sourceInterval:[49,55]},["app",{sourceInterval:[49,54]},"space",[]]],["app",{sourceInterval:[56,69]},"drawToCommand",[]]]]]],["star",{sourceInterval:[74,80]},["app",{sourceInterval:[74,79]},"space",[]]]]],drawToCommand:["define",{sourceInterval:[84,809]},null,[],["alt",{sourceInterval:[104,809]},["app",{sourceInterval:[104,117]},"moveToCommand",[]],["app",{sourceInterval:[124,145]},"absoluteLineToCommand",[]],["app",{sourceInterval:[152,173]},"relativeLineToCommand",[]],["app",{sourceInterval:[180,209]},"absoluteVerticalLineToCommand",[]],["app",{sourceInterval:[216,245]},"relativeVerticalLineToCommand",[]],["app",{sourceInterval:[252,283]},"absoluteHorizontalLineToCommand",[]],["app",{sourceInterval:[290,321]},"relativeHorizontalLineToCommand",[]],["app",{sourceInterval:[328,356]},"absoluteEllipticalArcCommand",[]],["app",{sourceInterval:[363,391]},"relativeEllipticalArcCommand",[]],["app",{sourceInterval:[398,441]},"absoluteSmoothQuadraticBezierCurveToCommand",[]],["app",{sourceInterval:[448,491]},"relativeSmoothQuadraticBezierCurveToCommand",[]],["app",{sourceInterval:[498,535]},"absoluteQuadraticBezierCurveToCommand",[]],["app",{sourceInterval:[542,579]},"relativeQuadraticBezierCurveToCommand",[]],["app",{sourceInterval:[586,625]},"absoluteSmoothCubicBezierCurveToCommand",[]],["app",{sourceInterval:[632,671]},"relativeSmoothCubicBezierCurveToCommand",[]],["app",{sourceInterval:[678,711]},"absoluteCubicBezierCurveToCommand",[]],["app",{sourceInterval:[718,751]},"relativeCubicBezierCurveToCommand",[]],["app",{sourceInterval:[758,780]},"absoluteClosePathToken",[]],["app",{sourceInterval:[787,809]},"relativeClosePathToken",[]]]],absoluteCubicBezierCurveToCommand:["define",{sourceInterval:[813,921]},null,[],["seq",{sourceInterval:[853,921]},["app",{sourceInterval:[853,884]},"absoluteCubicBezierCurveToToken",[]],["star",{sourceInterval:[885,891]},["app",{sourceInterval:[885,890]},"space",[]]],["app",{sourceInterval:[892,921]},"coordinatePairTripletSequence",[]]]],absoluteCubicBezierCurveToToken:["define",{sourceInterval:[924,961]},null,[],["terminal",{sourceInterval:[958,961]},"C"]],relativeCubicBezierCurveToCommand:["define",{sourceInterval:[964,1072]},null,[],["seq",{sourceInterval:[1004,1072]},["app",{sourceInterval:[1004,1035]},"relativeCubicBezierCurveToToken",[]],["star",{sourceInterval:[1036,1042]},["app",{sourceInterval:[1036,1041]},"space",[]]],["app",{sourceInterval:[1043,1072]},"coordinatePairTripletSequence",[]]]],relativeCubicBezierCurveToToken:["define",{sourceInterval:[1075,1112]},null,[],["terminal",{sourceInterval:[1109,1112]},"c"]],absoluteSmoothCubicBezierCurveToCommand:["define",{sourceInterval:[1116,1234]},null,[],["seq",{sourceInterval:[1162,1234]},["app",{sourceInterval:[1162,1199]},"absoluteSmoothCubicBezierCurveToToken",[]],["star",{sourceInterval:[1200,1206]},["app",{sourceInterval:[1200,1205]},"space",[]]],["app",{sourceInterval:[1207,1234]},"coordinatePairTupleSequence",[]]]],absoluteSmoothCubicBezierCurveToToken:["define",{sourceInterval:[1237,1280]},null,[],["terminal",{sourceInterval:[1277,1280]},"S"]],relativeSmoothCubicBezierCurveToCommand:["define",{sourceInterval:[1283,1401]},null,[],["seq",{sourceInterval:[1329,1401]},["app",{sourceInterval:[1329,1366]},"relativeSmoothCubicBezierCurveToToken",[]],["star",{sourceInterval:[1367,1373]},["app",{sourceInterval:[1367,1372]},"space",[]]],["app",{sourceInterval:[1374,1401]},"coordinatePairTupleSequence",[]]]],relativeSmoothCubicBezierCurveToToken:["define",{sourceInterval:[1404,1447]},null,[],["terminal",{sourceInterval:[1444,1447]},"s"]],absoluteQuadraticBezierCurveToCommand:["define",{sourceInterval:[1451,1565]},null,[],["seq",{sourceInterval:[1495,1565]},["app",{sourceInterval:[1495,1530]},"absoluteQuadraticBezierCurveToToken",[]],["star",{sourceInterval:[1531,1537]},["app",{sourceInterval:[1531,1536]},"space",[]]],["app",{sourceInterval:[1538,1565]},"coordinatePairTupleSequence",[]]]],absoluteQuadraticBezierCurveToToken:["define",{sourceInterval:[1568,1609]},null,[],["terminal",{sourceInterval:[1606,1609]},"Q"]],relativeQuadraticBezierCurveToCommand:["define",{sourceInterval:[1612,1726]},null,[],["seq",{sourceInterval:[1656,1726]},["app",{sourceInterval:[1656,1691]},"relativeQuadraticBezierCurveToToken",[]],["star",{sourceInterval:[1692,1698]},["app",{sourceInterval:[1692,1697]},"space",[]]],["app",{sourceInterval:[1699,1726]},"coordinatePairTupleSequence",[]]]],relativeQuadraticBezierCurveToToken:["define",{sourceInterval:[1729,1770]},null,[],["terminal",{sourceInterval:[1767,1770]},"q"]],absoluteSmoothQuadraticBezierCurveToCommand:["define",{sourceInterval:[1774,1895]},null,[],["seq",{sourceInterval:[1824,1895]},["app",{sourceInterval:[1824,1865]},"absoluteSmoothQuadraticBezierCurveToToken",[]],["star",{sourceInterval:[1866,1872]},["app",{sourceInterval:[1866,1871]},"space",[]]],["app",{sourceInterval:[1873,1895]},"coordinatePairSequence",[]]]],absoluteSmoothQuadraticBezierCurveToToken:["define",{sourceInterval:[1898,1945]},null,[],["terminal",{sourceInterval:[1942,1945]},"T"]],relativeSmoothQuadraticBezierCurveToCommand:["define",{sourceInterval:[1948,2069]},null,[],["seq",{sourceInterval:[1998,2069]},["app",{sourceInterval:[1998,2039]},"relativeSmoothQuadraticBezierCurveToToken",[]],["star",{sourceInterval:[2040,2046]},["app",{sourceInterval:[2040,2045]},"space",[]]],["app",{sourceInterval:[2047,2069]},"coordinatePairSequence",[]]]],relativeSmoothQuadraticBezierCurveToToken:["define",{sourceInterval:[2072,2119]},null,[],["terminal",{sourceInterval:[2116,2119]},"t"]],absoluteEllipticalArcCommand:["define",{sourceInterval:[2123,2221]},null,[],["seq",{sourceInterval:[2158,2221]},["app",{sourceInterval:[2158,2184]},"absoluteEllipticalArcToken",[]],["star",{sourceInterval:[2185,2191]},["app",{sourceInterval:[2185,2190]},"space",[]]],["app",{sourceInterval:[2192,2221]},"ellipticalArcArgumentSequence",[]]]],absoluteEllipticalArcToken:["define",{sourceInterval:[2224,2256]},null,[],["terminal",{sourceInterval:[2253,2256]},"A"]],relativeEllipticalArcCommand:["define",{sourceInterval:[2259,2357]},null,[],["seq",{sourceInterval:[2294,2357]},["app",{sourceInterval:[2294,2320]},"relativeEllipticalArcToken",[]],["star",{sourceInterval:[2321,2327]},["app",{sourceInterval:[2321,2326]},"space",[]]],["app",{sourceInterval:[2328,2357]},"ellipticalArcArgumentSequence",[]]]],relativeEllipticalArcToken:["define",{sourceInterval:[2360,2392]},null,[],["terminal",{sourceInterval:[2389,2392]},"a"]],ellipticalArcArgumentSequence_single:["define",{sourceInterval:[2432,2462]},null,[],["app",{sourceInterval:[2432,2453]},"ellipticalArcArgument",[]]],ellipticalArcArgumentSequence_recursive:["define",{sourceInterval:[2471,2558]},null,[],["seq",{sourceInterval:[2471,2545]},["app",{sourceInterval:[2472,2493]},"ellipticalArcArgument",[]],["opt",{sourceInterval:[2494,2514]},["app",{sourceInterval:[2494,2513]},"coordinateSeparator",[]]],["app",{sourceInterval:[2515,2544]},"ellipticalArcArgumentSequence",[]]]],ellipticalArcArgumentSequence:["define",{sourceInterval:[2396,2558]},null,[],["alt",{sourceInterval:[2432,2558]},["app",{sourceInterval:[2432,2453]},"ellipticalArcArgumentSequence_single",[]],["app",{sourceInterval:[2471,2545]},"ellipticalArcArgumentSequence_recursive",[]]]],ellipticalArcArgument:["define",{sourceInterval:[2562,2733]},null,[],["seq",{sourceInterval:[2590,2733]},["app",{sourceInterval:[2590,2604]},"coordinatePair",[]],["opt",{sourceInterval:[2605,2625]},["app",{sourceInterval:[2605,2624]},"coordinateSeparator",[]]],["app",{sourceInterval:[2626,2640]},"relativeNumber",[]],["app",{sourceInterval:[2641,2660]},"coordinateSeparator",[]],["app",{sourceInterval:[2667,2671]},"flag",[]],["opt",{sourceInterval:[2672,2692]},["app",{sourceInterval:[2672,2691]},"coordinateSeparator",[]]],["app",{sourceInterval:[2693,2697]},"flag",[]],["opt",{sourceInterval:[2698,2718]},["app",{sourceInterval:[2698,2717]},"coordinateSeparator",[]]],["app",{sourceInterval:[2719,2733]},"coordinatePair",[]]]],absoluteClosePathToken:["define",{sourceInterval:[2737,2765]},null,[],["terminal",{sourceInterval:[2762,2765]},"Z"]],relativeClosePathToken:["define",{sourceInterval:[2768,2796]},null,[],["terminal",{sourceInterval:[2793,2796]},"z"]],absoluteLineToCommand:["define",{sourceInterval:[2800,2877]},null,[],["seq",{sourceInterval:[2828,2877]},["app",{sourceInterval:[2828,2847]},"absoluteLineToToken",[]],["star",{sourceInterval:[2848,2854]},["app",{sourceInterval:[2848,2853]},"space",[]]],["app",{sourceInterval:[2855,2877]},"coordinatePairSequence",[]]]],absoluteLineToToken:["define",{sourceInterval:[2880,2905]},null,[],["terminal",{sourceInterval:[2902,2905]},"L"]],relativeLineToCommand:["define",{sourceInterval:[2908,2985]},null,[],["seq",{sourceInterval:[2936,2985]},["app",{sourceInterval:[2936,2955]},"relativeLineToToken",[]],["star",{sourceInterval:[2956,2962]},["app",{sourceInterval:[2956,2961]},"space",[]]],["app",{sourceInterval:[2963,2985]},"coordinatePairSequence",[]]]],relativeLineToToken:["define",{sourceInterval:[2988,3013]},null,[],["terminal",{sourceInterval:[3010,3013]},"l"]],absoluteVerticalLineToCommand:["define",{sourceInterval:[3017,3106]},null,[],["seq",{sourceInterval:[3053,3106]},["app",{sourceInterval:[3053,3080]},"absoluteVerticalLineToToken",[]],["star",{sourceInterval:[3081,3087]},["app",{sourceInterval:[3081,3086]},"space",[]]],["app",{sourceInterval:[3088,3106]},"coordinateSequence",[]]]],absoluteVerticalLineToToken:["define",{sourceInterval:[3109,3142]},null,[],["terminal",{sourceInterval:[3139,3142]},"V"]],relativeVerticalLineToCommand:["define",{sourceInterval:[3145,3234]},null,[],["seq",{sourceInterval:[3181,3234]},["app",{sourceInterval:[3181,3208]},"relativeVerticalLineToToken",[]],["star",{sourceInterval:[3209,3215]},["app",{sourceInterval:[3209,3214]},"space",[]]],["app",{sourceInterval:[3216,3234]},"coordinateSequence",[]]]],relativeVerticalLineToToken:["define",{sourceInterval:[3237,3270]},null,[],["terminal",{sourceInterval:[3267,3270]},"v"]],absoluteHorizontalLineToCommand:["define",{sourceInterval:[3274,3367]},null,[],["seq",{sourceInterval:[3312,3367]},["app",{sourceInterval:[3312,3341]},"absoluteHorizontalLineToToken",[]],["star",{sourceInterval:[3342,3348]},["app",{sourceInterval:[3342,3347]},"space",[]]],["app",{sourceInterval:[3349,3367]},"coordinateSequence",[]]]],absoluteHorizontalLineToToken:["define",{sourceInterval:[3370,3405]},null,[],["terminal",{sourceInterval:[3402,3405]},"H"]],relativeHorizontalLineToCommand:["define",{sourceInterval:[3408,3501]},null,[],["seq",{sourceInterval:[3446,3501]},["app",{sourceInterval:[3446,3475]},"relativeHorizontalLineToToken",[]],["star",{sourceInterval:[3476,3482]},["app",{sourceInterval:[3476,3481]},"space",[]]],["app",{sourceInterval:[3483,3501]},"coordinateSequence",[]]]],relativeHorizontalLineToToken:["define",{sourceInterval:[3504,3539]},null,[],["terminal",{sourceInterval:[3536,3539]},"h"]],moveToCommand:["define",{sourceInterval:[3543,3600]},null,[],["seq",{sourceInterval:[3559,3600]},["app",{sourceInterval:[3559,3570]},"moveToToken",[]],["star",{sourceInterval:[3571,3577]},["app",{sourceInterval:[3571,3576]},"space",[]]],["app",{sourceInterval:[3578,3600]},"coordinatePairSequence",[]]]],moveToToken:["define",{sourceInterval:[3603,3626]},null,[],["alt",{sourceInterval:[3617,3626]},["terminal",{sourceInterval:[3617,3620]},"M"],["terminal",{sourceInterval:[3623,3626]},"m"]]],coordinatePairTripletSequence_recursive:["define",{sourceInterval:[3666,3751]},null,[],["seq",{sourceInterval:[3666,3738]},["app",{sourceInterval:[3666,3687]},"coordinatePairTriplet",[]],["opt",{sourceInterval:[3688,3708]},["app",{sourceInterval:[3688,3707]},"coordinateSeparator",[]]],["app",{sourceInterval:[3709,3738]},"coordinatePairTripletSequence",[]]]],coordinatePairTripletSequence_single:["define",{sourceInterval:[3760,3791]},null,[],["app",{sourceInterval:[3760,3781]},"coordinatePairTriplet",[]]],coordinatePairTripletSequence:["define",{sourceInterval:[3630,3791]},null,[],["alt",{sourceInterval:[3666,3791]},["app",{sourceInterval:[3666,3738]},"coordinatePairTripletSequence_recursive",[]],["app",{sourceInterval:[3760,3781]},"coordinatePairTripletSequence_single",[]]]],coordinatePairTupleSequence_recursive:["define",{sourceInterval:[3829,3910]},null,[],["seq",{sourceInterval:[3829,3897]},["app",{sourceInterval:[3829,3848]},"coordinatePairTuple",[]],["opt",{sourceInterval:[3849,3869]},["app",{sourceInterval:[3849,3868]},"coordinateSeparator",[]]],["app",{sourceInterval:[3870,3897]},"coordinatePairTupleSequence",[]]]],coordinatePairTupleSequence_single:["define",{sourceInterval:[3919,3948]},null,[],["app",{sourceInterval:[3919,3938]},"coordinatePairTuple",[]]],coordinatePairTupleSequence:["define",{sourceInterval:[3795,3948]},null,[],["alt",{sourceInterval:[3829,3948]},["app",{sourceInterval:[3829,3897]},"coordinatePairTupleSequence_recursive",[]],["app",{sourceInterval:[3919,3938]},"coordinatePairTupleSequence_single",[]]]],coordinatePairSequence_recursive:["define",{sourceInterval:[3981,4052]},null,[],["seq",{sourceInterval:[3981,4039]},["app",{sourceInterval:[3981,3995]},"coordinatePair",[]],["opt",{sourceInterval:[3996,4016]},["app",{sourceInterval:[3996,4015]},"coordinateSeparator",[]]],["app",{sourceInterval:[4017,4039]},"coordinatePairSequence",[]]]],coordinatePairSequence_single:["define",{sourceInterval:[4059,4083]},null,[],["app",{sourceInterval:[4059,4073]},"coordinatePair",[]]],coordinatePairSequence:["define",{sourceInterval:[3952,4083]},null,[],["alt",{sourceInterval:[3981,4083]},["app",{sourceInterval:[3981,4039]},"coordinatePairSequence_recursive",[]],["app",{sourceInterval:[4059,4073]},"coordinatePairSequence_single",[]]]],coordinateSequence_recursive:["define",{sourceInterval:[4112,4179]},null,[],["seq",{sourceInterval:[4112,4166]},["app",{sourceInterval:[4112,4126]},"relativeNumber",[]],["opt",{sourceInterval:[4127,4147]},["app",{sourceInterval:[4127,4146]},"coordinateSeparator",[]]],["app",{sourceInterval:[4148,4166]},"coordinateSequence",[]]]],coordinateSequence_single:["define",{sourceInterval:[4186,4209]},null,[],["app",{sourceInterval:[4186,4200]},"relativeNumber",[]]],coordinateSequence:["define",{sourceInterval:[4087,4209]},null,[],["alt",{sourceInterval:[4112,4209]},["app",{sourceInterval:[4112,4166]},"coordinateSequence_recursive",[]],["app",{sourceInterval:[4186,4200]},"coordinateSequence_single",[]]]],coordinatePairTriplet:["define",{sourceInterval:[4213,4323]},null,[],["seq",{sourceInterval:[4237,4323]},["app",{sourceInterval:[4237,4251]},"coordinatePair",[]],["opt",{sourceInterval:[4252,4272]},["app",{sourceInterval:[4252,4271]},"coordinateSeparator",[]]],["app",{sourceInterval:[4273,4287]},"coordinatePair",[]],["opt",{sourceInterval:[4288,4308]},["app",{sourceInterval:[4288,4307]},"coordinateSeparator",[]]],["app",{sourceInterval:[4309,4323]},"coordinatePair",[]]]],coordinatePairTuple:["define",{sourceInterval:[4327,4399]},null,[],["seq",{sourceInterval:[4349,4399]},["app",{sourceInterval:[4349,4363]},"coordinatePair",[]],["opt",{sourceInterval:[4364,4384]},["app",{sourceInterval:[4364,4383]},"coordinateSeparator",[]]],["app",{sourceInterval:[4385,4399]},"coordinatePair",[]]]],coordinatePair:["define",{sourceInterval:[4403,4469]},null,[],["seq",{sourceInterval:[4420,4469]},["app",{sourceInterval:[4420,4434]},"relativeNumber",[]],["app",{sourceInterval:[4435,4454]},"coordinateSeparator",[]],["app",{sourceInterval:[4455,4469]},"relativeNumber",[]]]],relativeNumber:["define",{sourceInterval:[4473,4502]},null,[],["seq",{sourceInterval:[4490,4502]},["opt",{sourceInterval:[4490,4495]},["app",{sourceInterval:[4490,4494]},"sign",[]]],["app",{sourceInterval:[4496,4502]},"number",[]]]],coordinateSeparator_space:["define",{sourceInterval:[4532,4559]},null,[],["seq",{sourceInterval:[4532,4550]},["plus",{sourceInterval:[4532,4538]},["app",{sourceInterval:[4532,4537]},"space",[]]],["opt",{sourceInterval:[4539,4543]},["terminal",{sourceInterval:[4539,4542]},","]],["star",{sourceInterval:[4544,4550]},["app",{sourceInterval:[4544,4549]},"space",[]]]]],coordinateSeparator_comma:["define",{sourceInterval:[4566,4585]},null,[],["seq",{sourceInterval:[4566,4576]},["terminal",{sourceInterval:[4566,4569]},","],["star",{sourceInterval:[4570,4576]},["app",{sourceInterval:[4570,4575]},"space",[]]]]],coordinateSeparator:["define",{sourceInterval:[4506,4585]},null,[],["alt",{sourceInterval:[4532,4585]},["app",{sourceInterval:[4532,4550]},"coordinateSeparator_space",[]],["app",{sourceInterval:[4566,4576]},"coordinateSeparator_comma",[]]]],sign:["define",{sourceInterval:[4589,4605]},null,[],["alt",{sourceInterval:[4596,4605]},["terminal",{sourceInterval:[4596,4599]},"-"],["terminal",{sourceInterval:[4602,4605]},"+"]]],flag:["define",{sourceInterval:[4608,4624]},null,[],["alt",{sourceInterval:[4615,4624]},["terminal",{sourceInterval:[4615,4618]},"0"],["terminal",{sourceInterval:[4621,4624]},"1"]]],number_decimal:["define",{sourceInterval:[4642,4669]},null,[],["seq",{sourceInterval:[4642,4659]},["star",{sourceInterval:[4642,4648]},["app",{sourceInterval:[4642,4647]},"digit",[]]],["terminal",{sourceInterval:[4649,4652]},"."],["plus",{sourceInterval:[4653,4659]},["app",{sourceInterval:[4653,4658]},"digit",[]]]]],number_integer:["define",{sourceInterval:[4676,4692]},null,[],["plus",{sourceInterval:[4676,4682]},["app",{sourceInterval:[4676,4681]},"digit",[]]]],number:["define",{sourceInterval:[4628,4692]},null,[],["alt",{sourceInterval:[4642,4692]},["app",{sourceInterval:[4642,4659]},"number_decimal",[]],["app",{sourceInterval:[4676,4682]},"number_integer",[]]]]}]),k=b.createSemantics();k.addOperation("eval()",{relativeNumber(e,r){return parseFloat(this.sourceString)},flag(e){return+("0"!==this.sourceString)}}),k.addOperation("coordinates()",{coordinatePair:(e,r,a)=>({x:e.eval(),y:a.eval()})}),k.addOperation("pairSequence()",{coordinatePairSequence_recursive:(e,r,a)=>[e.coordinates(),...a.pairSequence()],coordinatePairSequence_single:e=>[e.coordinates()],coordinatePairSequence:e=>e.pairSequence()}),k.addOperation("coordinatePairTuple()",{coordinatePairTuple:(e,r,a)=>({p1:e.coordinates(),p2:a.coordinates()})}),k.addOperation("coordinatePairTriplet()",{coordinatePairTriplet:(e,r,a,n,o)=>({p1:e.coordinates(),p2:a.coordinates(),p3:o.coordinates()})}),k.addOperation("tripletSequence()",{coordinatePairTripletSequence_recursive:(e,r,a)=>[e.coordinatePairTriplet(),...a.tripletSequence()],coordinatePairTripletSequence_single:e=>[e.coordinatePairTriplet()],coordinatePairTripletSequence:e=>e.tripletSequence()}),k.addOperation("tupleSequence()",{coordinatePairTupleSequence_recursive:(e,r,a)=>[e.coordinatePairTuple(),...a.tupleSequence()],coordinatePairTupleSequence_single:e=>[e.coordinatePairTuple()],coordinatePairTupleSequence:e=>e.tupleSequence()}),k.addOperation("sequence()",{coordinateSequence_recursive:(e,r,a)=>[e.eval(),...a.sequence()],coordinateSequence_single:e=>[e.eval()],coordinateSequence:e=>e.sequence()}),k.addOperation("tokenize()",{moveToToken(e){return this.sourceString},relativeHorizontalLineToToken(e){return this.sourceString},absoluteLineToToken(e){return this.sourceString},relativeLineToToken(e){return this.sourceString},absoluteHorizontalLineToToken(e){return this.sourceString},relativeVerticalLineToToken(e){return this.sourceString},absoluteVerticalLineToToken(e){return this.sourceString},relativeEllipticalArcToken(e){return this.sourceString},absoluteEllipticalArcToken(e){return this.sourceString},relativeCubicBezierCurveToToken(e){return this.sourceString},absoluteCubicBezierCurveToToken(e){return this.sourceString},relativeSmoothCubicBezierCurveToToken(e){return this.sourceString},absoluteSmoothCubicBezierCurveToToken(e){return this.sourceString},relativeQuadraticBezierCurveToToken(e){return this.sourceString},absoluteQuadraticBezierCurveToToken(e){return this.sourceString},relativeSmoothQuadraticBezierCurveToToken(e){return this.sourceString},absoluteSmoothQuadraticBezierCurveToToken(e){return this.sourceString}}),k.addOperation("arc()",{ellipticalArcArgument:(e,r,a,n,o,t,l,c,i)=>({r:e.coordinates(),xAxisRotation:a.eval(),sweepFlag:o.eval(),largeArcFlag:l.eval(),to:i.coordinates()})}),k.addOperation("arcSequence()",{ellipticalArcArgumentSequence_recursive:(e,r,a)=>[e.arc(),...a.arcSequence()],ellipticalArcArgumentSequence_single:e=>[e.arc()],ellipticalArcArgumentSequence:e=>e.arcSequence()}),k.addOperation("command()",{drawToCommand:e=>e.command(),absoluteClosePathToken(e){return{type:this.sourceString}},relativeClosePathToken(e){return{type:this.sourceString}},moveToCommand:(e,r,a)=>({type:e.tokenize(),sequences:a.pairSequence()}),absoluteLineToCommand:(e,r,a)=>({type:e.tokenize(),sequences:a.pairSequence()}),relativeLineToCommand:(e,r,a)=>({type:e.tokenize(),sequences:a.pairSequence()}),absoluteVerticalLineToCommand:(e,r,a)=>({type:e.tokenize(),sequences:a.sequence().map(e=>({x:0,y:e}))}),relativeVerticalLineToCommand:(e,r,a)=>({type:e.tokenize(),sequences:a.sequence().map(e=>({x:0,y:e}))}),absoluteHorizontalLineToCommand:(e,r,a)=>({type:e.tokenize(),sequences:a.sequence().map(e=>({x:e,y:0}))}),relativeHorizontalLineToCommand:(e,r,a)=>({type:e.tokenize(),sequences:a.sequence().map(e=>({x:e,y:0}))}),relativeEllipticalArcCommand:(e,r,a)=>({type:e.tokenize(),sequences:a.arcSequence()}),absoluteEllipticalArcCommand:(e,r,a)=>({type:e.tokenize(),sequences:a.arcSequence()}),absoluteCubicBezierCurveToCommand:(e,r,a)=>({type:e.tokenize(),sequences:a.tripletSequence().map(e=>{let{p1:r,p2:a,p3:n}=e;return{p1:r,p2:a,to:n}})}),relativeCubicBezierCurveToCommand:(e,r,a)=>({type:e.tokenize(),sequences:a.tripletSequence().map(e=>{let{p1:r,p2:a,p3:n}=e;return{p1:r,p2:a,to:n}})}),absoluteSmoothCubicBezierCurveToCommand:(e,r,a)=>({type:e.tokenize(),sequences:a.tupleSequence().map(e=>{let{p1:r,p2:a}=e;return{p2:r,to:a}})}),relativeSmoothCubicBezierCurveToCommand:(e,r,a)=>({type:e.tokenize(),sequences:a.tupleSequence().map(e=>{let{p1:r,p2:a}=e;return{p2:r,to:a}})}),absoluteQuadraticBezierCurveToCommand:(e,r,a)=>({type:e.tokenize(),sequences:a.tupleSequence().map(e=>{let{p1:r,p2:a}=e;return{p1:r,to:a}})}),relativeQuadraticBezierCurveToCommand:(e,r,a)=>({type:e.tokenize(),sequences:a.tupleSequence().map(e=>{let{p1:r,p2:a}=e;return{p1:r,to:a}})}),absoluteSmoothQuadraticBezierCurveToCommand:(e,r,a)=>({type:e.tokenize(),sequences:a.pairSequence().map(e=>({to:e}))}),relativeSmoothQuadraticBezierCurveToCommand:(e,r,a)=>({type:e.tokenize(),sequences:a.pairSequence()})}),k.addOperation("run()",{command:(e,r,a,n,o)=>[...r.children.map(e=>e.command()),...n.children.map(e=>e.children.map(e=>e.command())).flat()]});let g={ant:{check:function(e){let r=i.match(e);return{valid:r.succeeded(),message:null==r?void 0:r.shortMessage}},evaluate:function(e){return u(i.match(e)).run()}},dinosaur:{check:function(e){let r=s.match(e);return{valid:r.succeeded(),message:null==r?void 0:r.shortMessage}},evaluate:function(e){return p(s.match(e)).run()}},worm:{check:function(e){let r=v.match(e);return{valid:r.succeeded(),message:null==r?void 0:r.shortMessage}},evaluate:function(e){return d(v.match(e)).run()}},larva:{check:function(e){let r=m.match(e);return{valid:r.succeeded(),message:null==r?void 0:r.shortMessage}},evaluate:function(e){return I(m.match(e)).run()}},ladybug:{check:function(e){let r=T.match(e);return{valid:r.succeeded(),message:null==r?void 0:r.shortMessage}},evaluate:function(e){return S(T.match(e)).run()}},butterfly:{check:function(e){let r=q.match(e);return{valid:r.succeeded(),message:null==r?void 0:r.shortMessage}},evaluate:function(e){return C(q.match(e)).run()}},swallow:{check:function(e){let r=b.match(e);return{valid:r.succeeded(),message:null==r?void 0:r.shortMessage}},evaluate:function(e){return k(b.match(e)).run()}}};function P(e){let{creature:r,dictionary:a,children:o}=e,[c,i]=(0,l.useState)(""),[u,s]=(0,l.useState)(null),p=g[r].check(c.trim()),v=e=>{i(e)};return(0,l.useEffect)(()=>{c&&p.valid?s(g[r].evaluate(c.trim())):s(null)},[r,c,p.valid]),(0,n.jsxs)("div",{className:t().container,children:[(0,n.jsx)("div",{className:t().display,children:(0,n.jsxs)("svg",{xmlns:"http://www.w3.org/2000/svg",height:500,width:500,viewBox:"0 0 ".concat(20," ").concat(20),preserveAspectRatio:"xMidYMid slice",role:"img",style:{backgroundImage:"url(/images/creatures/".concat(r,".svg)")},children:[Array(20).fill("").map((e,r)=>(0,n.jsx)("path",{d:"M0,".concat(r,"L").concat(20,",").concat(r),style:{fill:"none",stroke:"grey",strokeWidth:.1,strokeDasharray:"0.15"}},"v".concat(r))),Array(20).fill("").map((e,r)=>(0,n.jsx)("path",{d:"M".concat(r,",0L").concat(r,",").concat(20),style:{fill:"none",stroke:"grey",strokeWidth:.1,strokeDasharray:"0.15"}},"h".concat(r))),"ant"===r?(()=>{let e={x:0,y:0};return(u||[]).map((r,a)=>"P"!==r.type&&"p"!==r.type?[]:r.sequences.map((o,t)=>("p"===r.type&&(e.x+=o.x,e.y+=o.y),(0,n.jsx)("rect",{width:1,height:1,x:"p"===r.type?e.x:o.x,y:"p"===r.type?e.y:o.y,style:{fill:"green"}},"p".concat(a,"-").concat(t))))).flat()})():(0,n.jsx)("path",{d:(u||[]).map(e=>"Z"===e.type||"z"===e.type?e.type:"A"===e.type||"a"===e.type?"".concat(e.type," ").concat(e.sequences.map(e=>"".concat(e.r.x," ").concat(e.r.y," ").concat(e.xAxisRotation," ").concat(e.largeArcFlag," ").concat(e.sweepFlag," ").concat(e.to.x," ").concat(e.to.y)).join(",")):"C"===e.type||"c"===e.type?"".concat(e.type," ").concat(e.sequences.map(e=>"".concat(e.p1.x," ").concat(e.p1.y," ").concat(e.p2.x," ").concat(e.p2.y," ").concat(e.to.x," ").concat(e.to.y)).join(",")):"S"===e.type||"s"===e.type?"".concat(e.type," ").concat(e.sequences.map(e=>"".concat(e.p2.x," ").concat(e.p2.y," ").concat(e.to.x," ").concat(e.to.y)).join(",")):"Q"===e.type||"q"===e.type?"".concat(e.type," ").concat(e.sequences.map(e=>"".concat(e.p1.x," ").concat(e.p1.y," ").concat(e.to.x," ").concat(e.to.y)).join(",")):"T"===e.type||"t"===e.type?"".concat(e.type," ").concat(e.sequences.map(e=>"".concat(e.to.x," ").concat(e.to.y)).join(",")):"L"===e.type||"l"===e.type||"M"===e.type||"m"===e.type||"P"===e.type||"p"===e.type?"".concat(e.type," ").concat(e.sequences.map(e=>"".concat(e.x," ").concat(e.y)).join(",")):"H"===e.type||"h"===e.type?"".concat(e.type," ").concat(e.sequences.map(e=>"".concat(e.x)).join(",")):"V"===e.type||"v"===e.type?"".concat(e.type," ").concat(e.sequences.map(e=>"".concat(e.y)).join(",")):(console.log({command:e}),e.type)).join(" "),style:{fill:"none",stroke:"green",strokeWidth:.1}})]})}),(0,n.jsxs)("div",{className:t().editor,children:[(0,n.jsxs)("div",{className:t().editor,children:[(0,n.jsx)("textarea",{className:t().textarea,spellCheck:"false",value:c,onInput:e=>v(e.currentTarget.value),placeholder:a.placeholder}),p.valid?(0,n.jsxs)("span",{className:t().info,children:[a.length," ",(null==c?void 0:c.length)||0]}):(0,n.jsxs)("span",{className:t().warning,children:[a.syntax," ",p.message]})]}),(0,n.jsx)("div",{className:t().documentation,children:o})]})]})}},5630:(e,r,a)=>{Promise.resolve().then(a.t.bind(a,6874,23)),Promise.resolve().then(a.bind(a,1495)),Promise.resolve().then(a.t.bind(a,21,23)),Promise.resolve().then(a.t.bind(a,7727,23)),Promise.resolve().then(a.bind(a,4253)),Promise.resolve().then(a.t.bind(a,5874,23)),Promise.resolve().then(a.t.bind(a,6702,23)),Promise.resolve().then(a.t.bind(a,3672,23)),Promise.resolve().then(a.t.bind(a,7144,23)),Promise.resolve().then(a.t.bind(a,7125,23)),Promise.resolve().then(a.t.bind(a,7802,23)),Promise.resolve().then(a.t.bind(a,5047,23)),Promise.resolve().then(a.t.bind(a,3108,23)),Promise.resolve().then(a.t.bind(a,2984,23)),Promise.resolve().then(a.t.bind(a,3255,23)),Promise.resolve().then(a.t.bind(a,9143,23)),Promise.resolve().then(a.t.bind(a,9656,23)),Promise.resolve().then(a.t.bind(a,893,23)),Promise.resolve().then(a.t.bind(a,6147,23)),Promise.resolve().then(a.t.bind(a,8512,23)),Promise.resolve().then(a.t.bind(a,397,23)),Promise.resolve().then(a.t.bind(a,6687,23)),Promise.resolve().then(a.t.bind(a,653,23)),Promise.resolve().then(a.t.bind(a,9346,23))}},e=>{var r=r=>e(e.s=r);e.O(0,[831,332,874,44,634,441,684,358],()=>r(5630)),_N_E=e.O()}]);